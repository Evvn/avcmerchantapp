{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/avcmerchantapp/src/components/Common/SocketListener.js\";\nimport React from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nvar SocketListener =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SocketListener, _React$Component);\n\n  function SocketListener(props) {\n    var _this;\n\n    _classCallCheck(this, SocketListener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SocketListener).call(this, props));\n    _this.state = {\n      current: false,\n      previous: false,\n      endpoint: \"localhost:5000\"\n    };\n    return _this;\n  }\n\n  _createClass(SocketListener, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          endpoint = _this$state.endpoint,\n          current = _this$state.current;\n      var socket = socketIOClient(endpoint);\n      socket.on(\"FromAPI\", function (data) {\n        return _this2.setState({\n          previous: current,\n          current: data\n        }, _this2.checkUpdate(current, data));\n      });\n    }\n  }, {\n    key: \"checkUpdate\",\n    value: function checkUpdate(previous, current) {\n      var refresh = this.props.refresh;\n\n      if (previous !== current) {\n        refresh();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return SocketListener;\n}(React.Component);\n\nexport default SocketListener;","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantapp/src/components/Common/SocketListener.js"],"names":["React","socketIOClient","SocketListener","props","state","current","previous","endpoint","socket","on","data","setState","checkUpdate","refresh","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAHc;AAQjB;;;;wCAEkB;AAAA;;AAAA,wBACe,KAAKH,KADpB;AAAA,UACPG,QADO,eACPA,QADO;AAAA,UACGF,OADH,eACGA,OADH;AAEf,UAAMG,MAAM,GAAGP,cAAc,CAACM,QAAD,CAA7B;AACAC,MAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAAAC,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAED,OAAZ;AAAqBA,UAAAA,OAAO,EAAEK;AAA9B,SAAd,EACzB,MAAI,CAACE,WAAL,CAAiBP,OAAjB,EAA0BK,IAA1B,CADyB,CAAJ;AAAA,OAAzB;AAEH;;;gCAEWJ,Q,EAAUD,O,EAAQ;AAAA,UAClBQ,OADkB,GACN,KAAKV,KADC,CAClBU,OADkB;;AAE1B,UAAGP,QAAQ,KAAKD,OAAhB,EAAwB;AACtBQ,QAAAA,OAAO;AACR;AACJ;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,KAAL,CAAWW,QADhB,CADJ;AAKH;;;;EA/BwBd,KAAK,CAACe,S;;AAmCnC,eAAeb,cAAf","sourcesContent":["import React from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nclass SocketListener extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            current: false,\n            previous: false,\n            endpoint: \"localhost:5000\",\n        }\n    }\n\n    componentDidMount(){\n        const { endpoint, current } = this.state;\n        const socket = socketIOClient(endpoint);\n        socket.on(\"FromAPI\", data => this.setState({ previous: current, current: data },\n            this.checkUpdate(current, data)));\n    }\n\n    checkUpdate(previous, current){\n        const { refresh } = this.props;\n        if(previous !== current){\n          refresh();\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n\n} \n\nexport default SocketListener;"]},"metadata":{},"sourceType":"module"}