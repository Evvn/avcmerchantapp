{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nimport Airtable from \"../data/airtable\";\nimport Orders from \"../data/orders\";\nimport Items from \"../data/items\";\nimport Addons from \"../data/addons\";\nexport var mapOrdersToData = function mapOrdersToData(data) {\n  var orders = data.orders,\n      addOns = data.addOns,\n      items = data.items;\n  return sortOrders(orders.map(function (order) {\n    console.log(AddOns);\n\n    var _order$item_id = _slicedToArray(order.item_id, 1),\n        itemId = _order$item_id[0],\n        quantity = order.quantity;\n\n    var itemsOut = items.find(function (item) {\n      return item.id === itemId;\n    });\n    return _objectSpread({}, order, {\n      items: items,\n      addons: (itemsOut.addons || []).map(function (add) {\n        return addOns.find(function (addFrom) {\n          return addFrom.id === add;\n        });\n      }),\n      quantity: quantity\n    });\n  }));\n};\nexport var sortByTime = function sortByTime(orders) {\n  return orders.sort(function (a, b) {\n    // Sorts the completed orders by the completed_time field\n    var firstItem = dayjs(a.completed_time ? a.completed_time : a.created_time);\n    var secondItem = dayjs(b.completed_time ? b.completed_time : b.created_time);\n\n    if (firstItem.isBefore(secondItem)) {\n      return 1;\n    }\n\n    if (firstItem.isAfter(secondItem)) {\n      return -1;\n    } // The dates are the same\n\n\n    return 0;\n  });\n};\nexport var sortOrders = function sortOrders(orders) {\n  var pending = sortByTime(orders.filter(function (order) {\n    return !order.processed && !order.order_is_ready;\n  }));\n  var ready = sortByTime(orders.filter(function (order) {\n    return order.processed && !order.order_is_ready;\n  }));\n  var completed = sortByTime(orders.filter(function (order) {\n    return !!order.order_is_ready;\n  }));\n  return {\n    pending: pending,\n    ready: ready,\n    completed: completed\n  };\n};\nexport var airtableFetch =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var venueName, orderState;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            venueName = \"Hopscotch\";\n            orderState = {};\n            _context.next = 4;\n            return Airtable.fetchBase({\n              venueName: venueName,\n              baseName: \"Orders\"\n            }).then(function (response) {\n              Orders.setAll({\n                venueName: venueName,\n                items: response\n              });\n              var currentOrders = Orders.getAll(\"Hopscotch\");\n              orderState.orders = currentOrders;\n            });\n\n          case 4:\n            _context.next = 6;\n            return Airtable.fetchBase({\n              venueName: venueName,\n              baseName: \"Database\"\n            }).then(function (response) {\n              Items.setAll({\n                items: response.map(Airtable.mapItemColumns),\n                venueName: venueName\n              });\n              var currentItems = Items.getAll(\"Hopscotch\");\n              orderState.items = currentItems;\n            });\n\n          case 6:\n            _context.next = 8;\n            return Airtable.fetchBase({\n              venueName: venueName,\n              baseName: \"Add-On by Group\"\n            }).then(function (response) {\n              Addons.setAll({\n                addons: response.map(Airtable.mapAddonColumns),\n                venueName: venueName\n              });\n              var currentAddons = Addons.getAll(\"Hopscotch\");\n              orderState.addons = currentAddons;\n              console.log(currentAddons);\n            });\n\n          case 8:\n            return _context.abrupt(\"return\", orderState);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function airtableFetch() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantapp/src/utils/orderUtils.js"],"names":["_","dayjs","Airtable","Orders","Items","Addons","mapOrdersToData","data","orders","addOns","items","sortOrders","map","order","console","log","AddOns","item_id","itemId","quantity","itemsOut","find","item","id","addons","add","addFrom","sortByTime","sort","a","b","firstItem","completed_time","created_time","secondItem","isBefore","isAfter","pending","filter","processed","order_is_ready","ready","completed","airtableFetch","venueName","orderState","fetchBase","baseName","then","response","setAll","currentOrders","getAll","mapItemColumns","currentItems","mapAddonColumns","currentAddons"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport dayjs from 'dayjs';\n\nimport Airtable from \"../data/airtable\";\nimport Orders from \"../data/orders\";\nimport Items from \"../data/items\";\nimport Addons from \"../data/addons\";\n\nexport const mapOrdersToData = (data) => {\n    const { orders, addOns, items} = data;\n    return sortOrders(orders.map(order => {\n      console.log(AddOns)\n      const { item_id: [itemId], quantity } = order;\n      let itemsOut = items.find(item => item.id === itemId);\n      return {\n        ...order,\n        ...{\n        items,\n        addons: (itemsOut.addons || []).map(add => addOns.find(addFrom => addFrom.id === add)),\n        quantity\n      }};\n    }));\n};\n\nexport const sortByTime = (orders) =>{\n    return orders.sort((a, b) => {\n        // Sorts the completed orders by the completed_time field\n        const firstItem = dayjs(\n          a.completed_time ? a.completed_time : a.created_time\n        );\n        const secondItem = dayjs(\n          b.completed_time ? b.completed_time : b.created_time\n        );\n\n        if (firstItem.isBefore(secondItem)) {\n          return 1;\n        }\n\n        if (firstItem.isAfter(secondItem)) {\n          return -1;\n        }\n\n        // The dates are the same\n        return 0;\n      });\n}\n\n\nexport const sortOrders = (orders) => {\n    const pending = sortByTime(orders.filter(order => !order.processed && !order.order_is_ready));\n    const ready = sortByTime(orders.filter(order => order.processed && !order.order_is_ready));\n    const completed = sortByTime(orders.filter(order => !!order.order_is_ready));\n\n    return { pending, ready, completed };\n      \n}\n\nexport const airtableFetch = async () => {\n    const venueName = \"Hopscotch\";\n    const orderState = {}\n    await Airtable.fetchBase({\n      venueName,\n      baseName: \"Orders\"\n    }).then(response => {\n      Orders.setAll({\n        venueName,\n        items: response\n      });\n      const currentOrders = Orders.getAll(\"Hopscotch\");\n      orderState.orders = currentOrders;\n    });\n\n    /**\n     * Get all current available items to map with the order.\n     */\n    await Airtable.fetchBase({\n      venueName,\n      baseName: \"Database\"\n    }).then(response => {\n      Items.setAll({\n        items: response.map(Airtable.mapItemColumns),\n        venueName\n      });\n      const currentItems = Items.getAll(\"Hopscotch\");\n      orderState.items = currentItems;\n    });\n\n    /**\n     * Get all current available items to map with the order.\n     */\n    await Airtable.fetchBase({\n      venueName,\n      baseName: \"Add-On by Group\"\n    }).then(response => {\n      Addons.setAll({\n        addons: response.map(Airtable.mapAddonColumns),\n        venueName\n      });\n      const currentAddons = Addons.getAll(\"Hopscotch\");\n      orderState.addons = currentAddons;\n      console.log(currentAddons)\n    });\n\n    return orderState;\n}"]},"metadata":{},"sourceType":"module"}