{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Cart/CartContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from './actions/actions.js';\nimport PaymentScreen from './PaymentScreen.js';\nimport CartItem from './CartItem.js'; //css\n\nimport './styles/checkout.scss';\n\nvar CartContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CartContainer, _React$Component);\n\n  function CartContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CartContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CartContainer).call(this, props));\n\n    _this.closePaymentScreen = function () {\n      _this.setState({\n        showPaymentScreen: false\n      });\n    };\n\n    _this.state = {\n      showPaymentScreen: false,\n      orderTotal: 0\n    };\n    _this.getTotal = _this.getTotal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTotal = _this.updateTotal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CartContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTotal();\n    }\n  }, {\n    key: \"getQuantity\",\n    value: function getQuantity(items) {\n      var quantity = 0;\n      items.map(function (item) {\n        quantity = quantity + item.quantity;\n      });\n      return quantity;\n    }\n  }, {\n    key: \"getTotal\",\n    value: function getTotal() {\n      var currentOrder = this.props.currentOrder;\n      var total = 0;\n      Object.values(currentOrder).forEach(function (item, index) {\n        total = total + item[0].price * item[0].quantity;\n      });\n      this.setState({\n        orderTotal: total\n      });\n    }\n  }, {\n    key: \"printOrder\",\n    value: function printOrder() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          currentOrder = _this$props.currentOrder,\n          removeFromCart = _this$props.removeFromCart;\n      var itemGroups = Object.keys(currentOrder);\n      var orderTotal = this.state.orderTotal;\n      var total = 0;\n      Object.values(currentOrder).forEach(function (item, index) {\n        total = total + item[0].price * item[0].quantity;\n      });\n      return React.createElement(\"div\", {\n        className: \"cartCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Winter Village\"), React.createElement(\"img\", {\n        onClick: function onClick() {\n          window.history.back();\n        },\n        src: \"/icons/arrow-left-solid-white.svg\",\n        className: \"headerBackArrow\",\n        alt: \"back arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        className: \"cartHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Your Order\"), itemGroups.length === 0 ? React.createElement(\"div\", {\n        className: \"emptyCart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/icons/cart_icon_sad.svg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Your cart is empty!\")) : itemGroups.map(function (itemGroup) {\n        return React.createElement(CartItem, {\n          addToTotal: _this2.updateTotal,\n          key: itemGroup,\n          itemId: itemGroup,\n          items: currentOrder[itemGroup],\n          removeFromCart: removeFromCart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: \"orderTotal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Order Total\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, orderTotal.toFixed(2))), React.createElement(\"button\", {\n        className: \"payNowBtn\",\n        onClick: function onClick(e) {\n          _this2.openPaymentScreen();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Checkout\"));\n    }\n  }, {\n    key: \"openPaymentScreen\",\n    value: function openPaymentScreen() {\n      this.setState({\n        showPaymentScreen: true\n      });\n    }\n  }, {\n    key: \"settlePayment\",\n    value: function settlePayment() {\n      this.setState({\n        showPaymentScreen: false\n      });\n    }\n  }, {\n    key: \"updateTotal\",\n    value: function updateTotal(itemTotal) {\n      var orderTotal = this.state.orderTotal;\n      this.setState({\n        orderTotal: itemTotal + subTotal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var showPaymentScreen = this.state.showPaymentScreen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, showPaymentScreen ? React.createElement(PaymentScreen, {\n        orderTotal: this.state.orderTotal,\n        closePaymentScreen: this.closePaymentScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }) : this.printOrder());\n    }\n  }]);\n\n  return CartContainer;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentOrder: state.persistentCart.currentOrder\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Cart/CartContainer.js"],"names":["React","connect","bindActionCreators","actions","PaymentScreen","CartItem","CartContainer","props","closePaymentScreen","setState","showPaymentScreen","state","orderTotal","getTotal","bind","updateTotal","items","quantity","map","item","currentOrder","total","Object","values","forEach","index","price","removeFromCart","itemGroups","keys","window","history","back","length","itemGroup","toFixed","e","openPaymentScreen","itemTotal","subTotal","printOrder","Component","mapDispatchToProps","dispatch","mapStateToProps","persistentCart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as actions from './actions/actions.js';\nimport PaymentScreen from './PaymentScreen.js';\nimport CartItem from './CartItem.js';\n\n//css\nimport './styles/checkout.scss'\n\nclass CartContainer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showPaymentScreen: false,\n            orderTotal: 0,\n        }\n\n        this.getTotal = this.getTotal.bind(this);\n        this.updateTotal = this.updateTotal.bind(this);\n    }\n\n    componentDidMount() {\n      this.getTotal()\n    }\n\n    getQuantity(items){\n        let quantity = 0;\n        items.map(item => {\n            quantity = quantity + item.quantity;\n        });\n        return quantity;\n    }\n\n    getTotal() {\n      const { currentOrder } = this.props\n      let total = 0\n      Object.values(currentOrder).forEach((item, index) => {\n        total = total + (item[0].price * item[0].quantity)\n      })\n      this.setState({\n        orderTotal: total,\n      })\n    }\n\n    printOrder(){\n      const { currentOrder, removeFromCart } = this.props;\n      const itemGroups = Object.keys(currentOrder);\n      const orderTotal = this.state.orderTotal\n      let total = 0\n      Object.values(currentOrder).forEach((item, index) => {\n        total = total + (item[0].price * item[0].quantity)\n      })\n\n      return (\n        <div className=\"cartCont\">\n          <header className=\"header\">\n            <h1 className=\"venue\">Winter Village</h1>\n            <img onClick={() => {window.history.back()}} src=\"/icons/arrow-left-solid-white.svg\" className=\"headerBackArrow\" alt=\"back arrow\"/>\n          </header>\n          <h2 className=\"cartHeading\">Your Order</h2>\n          { itemGroups.length === 0 ?\n            <div className=\"emptyCart\">\n              <img src=\"/icons/cart_icon_sad.svg\" alt=\"\"/>\n              <span>Your cart is empty!</span>\n            </div>\n            :\n            itemGroups.map(itemGroup => <CartItem addToTotal={this.updateTotal} key={itemGroup} itemId={itemGroup} items={currentOrder[itemGroup]} removeFromCart={removeFromCart} />)\n           }\n          <div className=\"orderTotal\">\n            <span>Order Total</span>\n            <span>{orderTotal.toFixed(2)}</span>\n          </div>\n          <button className=\"payNowBtn\" onClick={(e) => {this.openPaymentScreen()}}>Checkout</button>\n        </div>\n      );\n    }\n\n    openPaymentScreen(){\n        this.setState({showPaymentScreen: true})\n    }\n\n    closePaymentScreen = () => {\n      this.setState({showPaymentScreen: false})\n    }\n\n    settlePayment(){\n        this.setState({showPaymentScreen: false})\n    }\n\n    updateTotal(itemTotal){\n      const { orderTotal } = this.state;\n      this.setState({orderTotal: itemTotal + subTotal});\n    }\n\n    render(){\n        const {showPaymentScreen} = this.state;\n        return(\n            <div>\n                {showPaymentScreen ?\n                  <PaymentScreen\n                    orderTotal={this.state.orderTotal}\n                    closePaymentScreen={this.closePaymentScreen}\n                  />\n                  : this.printOrder()\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch)\n\nconst mapStateToProps = state => ({\n  currentOrder: state.persistentCart.currentOrder,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer)\n"]},"metadata":{},"sourceType":"module"}