{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/avcmerchantappN/src/App.js\";\nimport * as Pusher from \"pusher-js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route, Switch } from 'react-router'; // react-router v4\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport dayjs from \"dayjs\";\nimport * as actions from './components/Common/actions/actions.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen.js';\nimport Airtable from \"./data/airtable\";\nimport Orders from \"./data/orders\";\nimport Items from \"./data/items\";\nimport Addons from \"./data/addons\";\nimport logo from \"./Mr_Yum_logo_white.svg\";\nimport OrderPanel from './components/OrderPanel.js';\nimport stub from './data/airtableDatabaseStub.json';\nimport socketIOClient from \"socket.io-client\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Jumbotron, Badge } from 'reactstrap';\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\"; // Pusher Setup and Channels\n// NOTE: Has to have the 'client-' prefix otherwise Pusher rejects the event.\n// https://pusher.com/docs/client_api_guide/client_events#trigger-events\n\nvar ORDER_COMPLETE_EVENT = \"client-complete-order\";\nvar ORDER_CHANNEL_NAME = \"private-order-channel\";\nvar ORDER_ADDED_EVENT = \"new-order\";\nvar pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n  authEndpoint: process.env.REACT_APP_PUSHER_DOMAIN + \"/pusher/auth\",\n  cluster: \"ap1\"\n}); //////////////////////////////////////////////////////////////////////////////\n\nvar connectionStyles = function connectionStyles(status) {\n  return {\n    height: \"18px\",\n    width: \"18px\",\n    borderRadius: \"10px\",\n    backgroundColor: status === STATUS.CONNECTED ? \"green\" : status === STATUS.CONNECTING ? \"orange\" : \"red\",\n    marginLeft: \"5px\"\n  };\n};\n\nvar statusStyles = {\n  background: \"white\",\n  fontSize: \"16px\",\n  zIndex: \"2\",\n  display: \"flex\",\n  alignItems: \"center\",\n  marginLeft: \"30px\",\n  borderRadius: \"50px\",\n  height: \"40px\",\n  marginTop: \"5px\",\n  padding: \"10px\"\n}; ////////////////////////////////////////////////////////////////////////////////\n\nvar STATUS = {\n  CONNECTED: \"connected\",\n  CONNECTING: \"connecting\"\n};\nvar STATUS_LABELS = {\n  connected: \"Connected\",\n  connecting: \"Connecting\",\n  disconnected: \"Disconnected\"\n}; //////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentView: '#pending',\n      response: false,\n      endpoint: \"localhost:5000\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint;\n      var socket = socketIOClient(endpoint);\n      socket.on(\"FromAPI\", function (data) {\n        return _this2.setState({\n          response: data\n        });\n      });\n    }\n  }, {\n    key: \"routeTo\",\n    value: function routeTo(suffix) {\n      window.location = \"/\".concat(suffix);\n    }\n  }, {\n    key: \"clickNav\",\n    value: function clickNav(path) {\n      this.setState({\n        currentView: path\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // eslint-disable-next-line\n      var _this$props = this.props,\n          orders = _this$props.orders,\n          isLoading = _this$props.isLoading,\n          sendSms = _this$props.sendSms,\n          updateAirtable = _this$props.updateAirtable;\n      var connectionStatus = this.state.connectionStatus;\n      console.log(orders);\n\n      if (isLoading) {\n        return React.createElement(LoadingScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        });\n      } else {\n        var pendingOrders = orders.pending;\n        console.log(pendingOrders);\n        var completedOrders = orders.completed;\n        var hasPendingOrders = !!pendingOrders.length;\n        var hasCompletedOrders = !!completedOrders.length;\n        var routes = [{\n          name: 'home',\n          path: '#pending'\n        }, {\n          name: 'about',\n          path: '#ready'\n        }, {\n          name: 'whatwedo',\n          path: '#completed'\n        }];\n        var displayedRoutes = {\n          pending: {\n            label: \"Pending Orders\",\n            amount: \"(\".concat(pendingOrders.length, \")\"),\n            path: routes[0].path\n          },\n          ready: {\n            label: \"Ready For Pickup\",\n            amount: \"(\".concat(pendingOrders.length, \")\"),\n            path: routes[1].path\n          },\n          completed: {\n            label: \"Completed Orders\",\n            amount: \"(\".concat(completedOrders.length, \")\"),\n            path: routes[2].path\n          }\n        };\n        console.log(this.state.response); // const path = router.location.pathname.split('/')[1];\n        // const showMenu = venueNames ? venueNames.includes(path) ? true : false : false;\n\n        return React.createElement(\"div\", {\n          style: {\n            display: 'block'\n          },\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(ToastContainer, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n          pauseOnHover: false,\n          pauseOnFocusLoss: false,\n          hideProgressBar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), React.createElement(Navbar, {\n          className: \"mercNav\",\n          expand: \"md\",\n          fixed: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(NavbarBrand, {\n          href: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: {\n            height: \"50px\",\n            color: \"blue\"\n          },\n          src: logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        })), React.createElement(NavbarToggler, {\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }), React.createElement(Collapse, {\n          isOpen: this.state.isOpen,\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          className: \"ml-auto\",\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, Object.keys(displayedRoutes).map(function (key) {\n          return React.createElement(NavItem, {\n            className: \"nlink\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"navigationLink\",\n            onClick: function onClick() {\n              _this3.clickNav(displayedRoutes[key].path);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, React.createElement(NavLink, {\n            className: \"nlink\",\n            href: displayedRoutes[key].path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, displayedRoutes[key].label, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }), displayedRoutes[key].amount), React.createElement(\"div\", {\n            className: \"blueRectBelow\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          })));\n        })))), React.createElement(\"div\", {\n          className: \"panelContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(OrderPanel, {\n          hasOrders: hasPendingOrders,\n          orders: pendingOrders,\n          label: \"pending\",\n          header: \"Pending Orders\",\n          sendSms: sendSms,\n          updateAirtable: updateAirtable,\n          response: this.state.response,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router,\n    orders: state.common.orders,\n    isLoading: state.common.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantappN/src/App.js"],"names":["Pusher","React","connect","bindActionCreators","BrowserRouter","Router","Route","Switch","ToastContainer","toast","dayjs","actions","NotFound","LoadingScreen","Airtable","Orders","Items","Addons","OrderPanel","stub","socketIOClient","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Jumbotron","Badge","ORDER_COMPLETE_EVENT","ORDER_CHANNEL_NAME","ORDER_ADDED_EVENT","pusher","process","env","REACT_APP_PUSHER_APP_KEY","authEndpoint","REACT_APP_PUSHER_DOMAIN","cluster","connectionStyles","status","height","width","borderRadius","backgroundColor","STATUS","CONNECTED","CONNECTING","marginLeft","statusStyles","background","fontSize","zIndex","display","alignItems","marginTop","padding","STATUS_LABELS","connected","connecting","disconnected","App","props","state","currentView","response","endpoint","socket","on","data","setState","suffix","window","location","path","orders","isLoading","sendSms","updateAirtable","connectionStatus","console","log","pendingOrders","pending","completedOrders","completed","hasPendingOrders","length","hasCompletedOrders","routes","name","displayedRoutes","label","amount","ready","POSITION","TOP_RIGHT","color","logo","toggle","isOpen","Object","keys","map","key","clickNav","Component","mapDispatchToProps","dispatch","mapStateToProps","router","common"],"mappings":"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","sourcesContent":["import * as Pusher from \"pusher-js\";\nimport React from 'react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Route, Switch } from 'react-router' // react-router v4\nimport { ToastContainer, toast } from \"react-toastify\";\nimport dayjs from \"dayjs\";\n\nimport * as actions from './components/Common/actions/actions.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen.js';\nimport Airtable from \"./data/airtable\";\nimport Orders from \"./data/orders\";\nimport Items from \"./data/items\";\nimport Addons from \"./data/addons\";\nimport logo from './Mr_Yum_logo_white.svg';\nimport OrderPanel from './components/OrderPanel.js';\nimport stub from './data/airtableDatabaseStub.json';\nimport socketIOClient from \"socket.io-client\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Jumbotron,\n  Badge,\n} from 'reactstrap';\n\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Pusher Setup and Channels\n// NOTE: Has to have the 'client-' prefix otherwise Pusher rejects the event.\n// https://pusher.com/docs/client_api_guide/client_events#trigger-events\nconst ORDER_COMPLETE_EVENT = \"client-complete-order\";\nconst ORDER_CHANNEL_NAME = \"private-order-channel\";\nconst ORDER_ADDED_EVENT = \"new-order\";\nconst pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n  authEndpoint: process.env.REACT_APP_PUSHER_DOMAIN + \"/pusher/auth\",\n  cluster: \"ap1\"\n});\n//////////////////////////////////////////////////////////////////////////////\n\nconst connectionStyles = status => {\n  return {\n    height: \"18px\",\n    width: \"18px\",\n    borderRadius: \"10px\",\n    backgroundColor:\n      status === STATUS.CONNECTED\n        ? \"green\"\n        : status === STATUS.CONNECTING\n        ? \"orange\"\n        : \"red\",\n    marginLeft: \"5px\",\n  };\n};\n\nconst statusStyles = {\n  background: \"white\",\n  fontSize: \"16px\",\n  zIndex: \"2\",\n  display: \"flex\",\n  alignItems: \"center\",\n  marginLeft: \"30px\",\n  borderRadius: \"50px\",\n  height: \"40px\",\n  marginTop: \"5px\",\n  padding: \"10px\"\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nconst STATUS = {\n  CONNECTED: \"connected\",\n  CONNECTING: \"connecting\"\n};\n\nconst STATUS_LABELS = {\n  connected: \"Connected\",\n  connecting: \"Connecting\",\n  disconnected: \"Disconnected\",\n};\n\n//////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentView: '#pending',\n        response: false,\n        endpoint: \"localhost:5000\",\n    };\n\n  }\n\n\n  componentDidMount(){\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"FromAPI\", data => this.setState({ response: data }));\n  } \n\n  routeTo(suffix){\n    window.location = `/${suffix}`;\n  }\n\n  clickNav(path){\n    this.setState({currentView: path});\n  }\n\n  render() {\n    // eslint-disable-next-line\n    const { orders, isLoading, sendSms, updateAirtable } = this.props\n    const {connectionStatus} = this.state;\n    console.log(orders);\n\n    if(isLoading){\n      return <LoadingScreen />\n    }\n    else{\n\n    const pendingOrders = orders.pending;\n    console.log(pendingOrders)\n    const completedOrders = orders.completed;\n    const hasPendingOrders = !!pendingOrders.length;\n    const hasCompletedOrders = !!completedOrders.length;\n\n    const routes = [\n      { name: 'home', path: '#pending' },\n      { name: 'about', path: '#ready' },\n      { name: 'whatwedo', path: '#completed' },\n    ];\n\n    const displayedRoutes = {\n      pending: { label: `Pending Orders`, amount: `(${pendingOrders.length})`, path: routes[0].path },\n      ready: { label: `Ready For Pickup`, amount: `(${pendingOrders.length})`, path: routes[1].path },\n      completed: { label: `Completed Orders`, amount: `(${completedOrders.length})`, path: routes[2].path },\n    };\n\n    console.log(this.state.response);\n    // const path = router.location.pathname.split('/')[1];\n    // const showMenu = venueNames ? venueNames.includes(path) ? true : false : false;\n    return (\n      <div style={{display: 'block'}} className=\"App\">\n        <ToastContainer\n          position={toast.POSITION.TOP_RIGHT}\n          autoClose={1000}\n          pauseOnHover={false}\n          pauseOnFocusLoss={false}\n          hideProgressBar={true}\n        />\n        <Navbar className=\"mercNav\" expand=\"md\" fixed=\"top\">\n          <NavbarBrand href=\"/\">\n              <img style={{ height: \"50px\", color: \"blue\" }} src={logo} />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {Object.keys(displayedRoutes).map(key => (\n                <NavItem className=\"nlink\" >\n                  <div className=\"navigationLink\" onClick ={() => {this.clickNav(displayedRoutes[key].path)}}>\n                    <NavLink className=\"nlink\" href={displayedRoutes[key].path}>\n                    {displayedRoutes[key].label}\n                    <br/>\n                    {displayedRoutes[key].amount}\n                    </NavLink>\n                    <div className=\"blueRectBelow\"></div>\n                  </div>\n                </NavItem>\n              ))}\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <div className=\"panelContainer\">\n          <OrderPanel\n            hasOrders={hasPendingOrders}\n            orders={pendingOrders}\n            label='pending'\n            header=\"Pending Orders\"\n            sendSms={sendSms}\n            updateAirtable={updateAirtable}\n            response={this.state.response}\n          />\n      </div>\n  </div>);\n    }\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  router: state.router,\n  orders: state.common.orders,\n  isLoading: state.common.isLoading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}