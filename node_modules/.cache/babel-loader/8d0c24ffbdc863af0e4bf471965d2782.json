{"ast":null,"code":"import _objectWithoutProperties from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Cart/PaymentForm.js\";\nimport React from 'react';\nimport { injectStripe, PaymentRequestButtonElement, CardElement } from 'react-stripe-elements'; //css\n\nimport './styles/checkout.scss';\n\nvar PaymentForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PaymentForm, _React$Component);\n\n  function PaymentForm(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentForm).call(this, props)); // start of attempted apple/google pay stuff\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.props.stripe) {\n        _this.props.stripe.createToken({\n          type: 'card',\n          name: 'pitchBlak'\n        }).then(function (result) {\n          console.log('[token]', result.token);\n          /* kick off redux action, then call bff in saga\n             this.props.makePayment(result.token, props.data.subtotal * 100, 'order description???')\n          */\n        });\n      } else {\n        console.log(\"Stripe.js hasn't loaded yet\");\n      }\n    };\n\n    _this.createOptions = function (fontSize, padding) {\n      return {\n        style: {\n          base: {\n            fontSize: fontSize,\n            color: '#424770',\n            letterSpacing: '0.025em',\n            padding: padding\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        }\n      };\n    };\n\n    var paymentRequest = props.stripe.paymentRequest({\n      country: 'AU',\n      currency: 'aud',\n      total: {\n        label: 'dunno yet',\n        amount: props.data.subtotal * 100 // amount needs to be in subunit of currency\n\n      }\n    });\n    paymentRequest.on('click', function () {\n      _this.setState({\n        disableButton: true\n      });\n    });\n    paymentRequest.on('token', function (_ref) {\n      var complete = _ref.complete,\n          token = _ref.token,\n          data = _objectWithoutProperties(_ref, [\"complete\", \"token\"]);\n\n      console.log('Received Stripe token: ', token);\n      console.log('Received customer information: ', data); // this.props.onToken(token, this.props.amount, this.props.desc);\n\n      complete('success');\n    });\n    paymentRequest.canMakePayment().then(function (result) {\n      _this.setState({\n        canMakePayment: !!result\n      });\n    }); // end of it\n\n    _this.state = {\n      disableButton: false,\n      canMakePayment: false,\n      paymentRequest: paymentRequest\n    };\n    return _this;\n  }\n\n  _createClass(PaymentForm, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      return React.createElement(\"div\", {\n        className: \"paymentScreenCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Winter Village\"), React.createElement(\"img\", {\n        onClick: function onClick() {\n          window.history.back();\n        },\n        src: \"/icons/arrow-left-solid-white.svg\",\n        className: \"headerBackArrow\",\n        alt: \"back arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '65px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Checkout\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '65px',\n          backgroundColor: 'lightgrey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Table service\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Table service\"), React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '65px',\n          backgroundColor: 'lightgrey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Payment\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: '22px 18px 22px 17px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(CardElement, Object.assign({}, this.createOptions('18px', '0px'), {\n        hideIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        style: {\n          marignTop: '103px',\n          height: '65px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Order Total\"), React.createElement(\"span\", {\n        style: {\n          float: 'right',\n          paddingRight: '18px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, data.subtotal.toFixed(2)))), // apple/google pay button hides if you cant use it\n      this.state.canMakePayment ? React.createElement(PaymentRequestButtonElement, {\n        paymentRequest: this.state.paymentRequest,\n        style: {\n          paymentRequestButton: {\n            theme: 'dark',\n            height: '64px'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"PAY NOW\") : null, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"PAY NOW\")));\n    }\n  }]);\n\n  return PaymentForm;\n}(React.Component);\n\n;\nexport default injectStripe(PaymentForm);","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Cart/PaymentForm.js"],"names":["React","injectStripe","PaymentRequestButtonElement","CardElement","PaymentForm","props","handleSubmit","e","preventDefault","stripe","createToken","type","name","then","result","console","log","token","createOptions","fontSize","padding","style","base","color","letterSpacing","invalid","paymentRequest","country","currency","total","label","amount","data","subtotal","on","setState","disableButton","complete","canMakePayment","state","window","history","back","width","height","backgroundColor","marignTop","float","paddingRight","toFixed","paymentRequestButton","theme","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,2BAAtB,EAAmDC,WAAnD,QAAsE,uBAAtE,C,CAEA;;AACA,OAAO,wBAAP;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN,GADe,CAGf;;AAHe,UAmCnBC,YAnCmB,GAmCJ,UAACC,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,MAAKH,KAAL,CAAWI,MAAf,EAAuB;AACnB,cAAKJ,KAAL,CAAWI,MAAX,CACEC,WADF,CACc;AAACC,UAAAA,IAAI,EAAE,MAAP;AAAeC,UAAAA,IAAI,EAAE;AAArB,SADd,EAEEC,IAFF,CAEO,UAACC,MAAD,EAAY;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAM,CAACG,KAA9B;AACA;;;AAGA,SAPL;AAQH,OATD,MASO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACJ,KAjDkB;;AAAA,UAmDnBE,aAnDmB,GAmDH,UAACC,QAAD,EAAWC,OAAX,EAAuB;AACnC,aAAO;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AACJH,YAAAA,QAAQ,EAARA,QADI;AAEJI,YAAAA,KAAK,EAAE,SAFH;AAGJC,YAAAA,aAAa,EAAE,SAHX;AAIJJ,YAAAA,OAAO,EAAPA;AAJI,WADD;AAOLK,UAAAA,OAAO,EAAE;AACPF,YAAAA,KAAK,EAAE;AADA;AAPJ;AADF,OAAP;AAaD,KAjEgB;;AAIf,QAAMG,cAAc,GAAGrB,KAAK,CAACI,MAAN,CAAaiB,cAAb,CAA4B;AAC/CC,MAAAA,OAAO,EAAE,IADsC;AAE/CC,MAAAA,QAAQ,EAAE,KAFqC;AAG/CC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,WADJ;AAEHC,QAAAA,MAAM,EAAE1B,KAAK,CAAC2B,IAAN,CAAWC,QAAX,GAAsB,GAF3B,CAEgC;;AAFhC;AAHwC,KAA5B,CAAvB;AASAP,IAAAA,cAAc,CAACQ,EAAf,CAAkB,OAAlB,EAA2B,YAAM;AAC7B,YAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAd;AACH,KAFD;AAIAV,IAAAA,cAAc,CAACQ,EAAf,CAAkB,OAAlB,EAA2B,gBAAgC;AAAA,UAA9BG,QAA8B,QAA9BA,QAA8B;AAAA,UAApBpB,KAAoB,QAApBA,KAAoB;AAAA,UAAVe,IAAU;;AACvDjB,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,KAAvC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CgB,IAA/C,EAFuD,CAGvD;;AACAK,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,KALD;AAOAX,IAAAA,cAAc,CAACY,cAAf,GAAgCzB,IAAhC,CAAqC,UAACC,MAAD,EAAY;AAC7C,YAAKqB,QAAL,CAAc;AAACG,QAAAA,cAAc,EAAE,CAAC,CAACxB;AAAnB,OAAd;AACH,KAFD,EAxBe,CA2Bf;;AACA,UAAKyB,KAAL,GAAa;AACTH,MAAAA,aAAa,EAAE,KADN;AAETE,MAAAA,cAAc,EAAE,KAFP;AAGTZ,MAAAA,cAAc,EAAdA;AAHS,KAAb;AA5Be;AAiClB;;;;6BAkCO;AAAA,UACGM,IADH,GACW,KAAK3B,KADhB,CACG2B,IADH;AAEJ,aACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,QAAA,OAAO,EAAE,mBAAM;AAACQ,UAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf;AAAsB,SAA3C;AAA6C,QAAA,GAAG,EAAC,mCAAjD;AAAqF,QAAA,SAAS,EAAC,iBAA/F;AAAiH,QAAA,GAAG,EAAC,YAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAM,QAAA,QAAQ,EAAE,KAAKpC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACqC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,MAAxB;AAAgCC,UAAAA,eAAe,EAAE;AAAjD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,EAQI;AAAK,QAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,MAAxB;AAAgCC,UAAAA,eAAe,EAAE;AAAjD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CARJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACzB,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD,oBAAiB,KAAKF,aAAL,CAAmB,MAAnB,EAA2B,KAA3B,CAAjB;AAAoD,QAAA,QAAQ,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CAXJ,CAJJ,EAqBI;AAAK,QAAA,KAAK,EAAE;AAAC4B,UAAAA,SAAS,EAAE,OAAZ;AAAqBF,UAAAA,MAAM,EAAE;AAA7B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAM,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,YAAY,EAAE;AAA/B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIhB,IAAI,CAACC,QAAL,CAAcgB,OAAd,CAAsB,CAAtB,CAAJ,CAArD,CAFJ,CArBJ,EA2BI;AACE,WAAKV,KAAL,CAAWD,cAAX,GACI,oBAAC,2BAAD;AACI,QAAA,cAAc,EAAE,KAAKC,KAAL,CAAWb,cAD/B;AAEI,QAAA,KAAK,EAAE;AACHwB,UAAAA,oBAAoB,EAAE;AAClBC,YAAAA,KAAK,EAAE,MADW;AAElBP,YAAAA,MAAM,EAAE;AAFU;AADnB,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,GAYI,IAxCV,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1CF,CALF,CADJ;AAoDH;;;;EA1HqB5C,KAAK,CAACoD,S;;AA2H/B;AAED,eAAenD,YAAY,CAACG,WAAD,CAA3B","sourcesContent":["import React from 'react';\nimport {injectStripe, PaymentRequestButtonElement, CardElement } from 'react-stripe-elements';\n\n//css\nimport './styles/checkout.scss'\n\nclass PaymentForm extends React.Component{\n    constructor(props) {\n        super(props);\n\n        // start of attempted apple/google pay stuff\n        const paymentRequest = props.stripe.paymentRequest({\n            country: 'AU',\n            currency: 'aud',\n            total: {\n                label: 'dunno yet',\n                amount: props.data.subtotal * 100, // amount needs to be in subunit of currency\n            },\n        });\n\n        paymentRequest.on('click', () => {\n            this.setState({disableButton: true});\n        });\n\n        paymentRequest.on('token', ({complete, token, ...data}) => {\n            console.log('Received Stripe token: ', token);\n            console.log('Received customer information: ', data);\n            // this.props.onToken(token, this.props.amount, this.props.desc);\n            complete('success')\n        });\n\n        paymentRequest.canMakePayment().then((result) => {\n            this.setState({canMakePayment: !!result});\n        });\n        // end of it\n        this.state = {\n            disableButton: false,\n            canMakePayment: false,\n            paymentRequest,\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.props.stripe) {\n            this.props.stripe\n             .createToken({type: 'card', name: 'pitchBlak'})\n             .then((result) => {\n                 console.log('[token]', result.token)\n                 /* kick off redux action, then call bff in saga\n                    this.props.makePayment(result.token, props.data.subtotal * 100, 'order description???')\n                 */\n                });\n        } else {\n            console.log(\"Stripe.js hasn't loaded yet\")\n        }\n    }\n\n    createOptions = (fontSize, padding) => {\n        return {\n          style: {\n            base: {\n              fontSize,\n              color: '#424770',\n              letterSpacing: '0.025em',\n              padding,\n            },\n            invalid: {\n              color: '#9e2146',\n            },\n          },\n        };\n      };\n\n    render(){\n        const {data} = this.props;\n        return(\n            <div className=\"paymentScreenCont\">\n              <header className=\"header\">\n                <h1 className=\"venue\">Winter Village</h1>\n                <img onClick={() => {window.history.back()}} src=\"/icons/arrow-left-solid-white.svg\" className=\"headerBackArrow\" alt=\"back arrow\"/>\n              </header>\n              <form onSubmit={this.handleSubmit}>\n                  <div style={{width: '100%', height: '65px'}}>\n                          <h4>Checkout</h4>\n                  </div>\n                  <div>\n                      <div style={{width: '100%', height: '65px', backgroundColor: 'lightgrey'}}>\n                          <h4>Table service</h4>\n                      </div>\n                      <label>\n                          Table service\n\n                      </label>\n                      <div style={{width: '100%', height: '65px', backgroundColor: 'lightgrey'}}>\n                          <h4>Payment</h4>\n                      </div>\n                      <label>\n                          <div style={{padding: '22px 18px 22px 17px'}}>\n                              <CardElement {...this.createOptions('18px', '0px')} hideIcon={true}/>\n                          </div>\n                      </label>\n                  </div>\n                  <div style={{marignTop: '103px', height: '65px'}}>\n                      <span>Order Total</span>\n                      <span style={{float: 'right', paddingRight: '18px'}}><b>{data.subtotal.toFixed(2)}</b></span>\n                  </div>\n\n\n                { // apple/google pay button hides if you cant use it\n                    this.state.canMakePayment ? (\n                        <PaymentRequestButtonElement\n                            paymentRequest={this.state.paymentRequest}\n                            style={{\n                                paymentRequestButton: {\n                                    theme: 'dark',\n                                    height: '64px'\n                                }\n                            }}\n                        >\n                            PAY NOW\n                        </PaymentRequestButtonElement>\n                    ) : null\n                }\n                <button>PAY NOW</button>\n            </form>\n          </div>\n        )\n    }\n};\n\nexport default injectStripe(PaymentForm);\n"]},"metadata":{},"sourceType":"module"}