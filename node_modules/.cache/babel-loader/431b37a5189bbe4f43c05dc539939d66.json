{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/avcmerchantapp/src/App.js\";\nimport * as Pusher from \"pusher-js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route, Switch } from 'react-router'; // react-router v4\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport dayjs from \"dayjs\";\nimport * as actions from './components/Common/actions/actions.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen.js';\nimport Airtable from \"./data/airtable\";\nimport Orders from \"./data/orders\";\nimport Items from \"./data/items\";\nimport Addons from \"./data/addons\";\nimport logo from \"./Mr_Yum_logo_white.svg\";\nimport classNames from 'classnames';\nimport stub from './data/airtableDatabaseStub.json';\nimport SocketListener from './components/Common/SocketListener';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Jumbotron, Badge } from 'reactstrap';\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nvar connectionStyles = function connectionStyles(status) {\n  return {\n    height: \"18px\",\n    width: \"18px\",\n    borderRadius: \"10px\",\n    backgroundColor: status === STATUS.CONNECTED ? \"green\" : status === STATUS.CONNECTING ? \"orange\" : \"red\",\n    marginLeft: \"5px\"\n  };\n};\n\nvar statusStyles = {\n  background: \"white\",\n  fontSize: \"16px\",\n  zIndex: \"2\",\n  display: \"flex\",\n  alignItems: \"center\",\n  marginLeft: \"30px\",\n  borderRadius: \"50px\",\n  height: \"40px\",\n  marginTop: \"5px\",\n  padding: \"10px\"\n}; ////////////////////////////////////////////////////////////////////////////////\n\nvar STATUS = {\n  CONNECTED: \"connected\",\n  CONNECTING: \"connecting\"\n};\nvar STATUS_LABELS = {\n  connected: \"Connected\",\n  connecting: \"Connecting\",\n  disconnected: \"Disconnected\"\n}; //////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentView: '#pending'\n    };\n    _this.channel = null;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.location = '#pending';\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      localStorage.clear('persist:persistedStore');\n    }\n  }, {\n    key: \"routeTo\",\n    value: function routeTo(suffix) {\n      window.location = \"/\".concat(suffix);\n    }\n  }, {\n    key: \"clickNav\",\n    value: function clickNav(path) {\n      this.setState({\n        currentView: path\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // eslint-disable-next-line\n      var isLoading = this.props.isLoading;\n      var displayedRoutes = {\n        pending: {\n          label: \"Pending Orders\",\n          path: '#pending'\n        },\n        ready: {\n          label: \"Ready For Pickup\",\n          path: '#ready'\n        },\n        completed: {\n          label: \"Completed Orders\",\n          path: '#completed'\n        }\n      };\n      console.log(window.location.hash);\n      return React.createElement(\"div\", {\n        style: {\n          display: 'block'\n        },\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 1000,\n        pauseOnHover: false,\n        pauseOnFocusLoss: false,\n        hideProgressBar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        className: \"mercNav\",\n        expand: \"md\",\n        fixed: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          height: \"50px\",\n          color: \"blue\"\n        },\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, Object.keys(displayedRoutes).map(function (key) {\n        return React.createElement(NavItem, {\n          className: classNames(window.location.hash === '#pending' ? \"nlink\" : \"nLinkSelected\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navigationLink\",\n          onClick: function onClick() {\n            _this2.clickNav(displayedRoutes[key].path);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: \"nlink\",\n          href: displayedRoutes[key].path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, displayedRoutes[key].label), React.createElement(\"div\", {\n          className: \"blueRectBelow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })));\n      })))), React.createElement(\"div\", {\n        className: \"panelContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(SocketListener, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router,\n    isLoading: state.common.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantapp/src/App.js"],"names":["Pusher","React","connect","bindActionCreators","BrowserRouter","Router","Route","Switch","ToastContainer","toast","dayjs","actions","NotFound","LoadingScreen","Airtable","Orders","Items","Addons","classNames","stub","SocketListener","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Jumbotron","Badge","connectionStyles","status","height","width","borderRadius","backgroundColor","STATUS","CONNECTED","CONNECTING","marginLeft","statusStyles","background","fontSize","zIndex","display","alignItems","marginTop","padding","STATUS_LABELS","connected","connecting","disconnected","App","props","state","currentView","channel","window","location","localStorage","clear","suffix","path","setState","isLoading","displayedRoutes","pending","label","ready","completed","console","log","hash","POSITION","TOP_RIGHT","color","logo","toggle","isOpen","Object","keys","map","key","clickNav","Component","mapDispatchToProps","dispatch","mapStateToProps","router","common"],"mappings":"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","sourcesContent":["import * as Pusher from \"pusher-js\";\nimport React from 'react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Route, Switch } from 'react-router' // react-router v4\nimport { ToastContainer, toast } from \"react-toastify\";\nimport dayjs from \"dayjs\";\n\nimport * as actions from './components/Common/actions/actions.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen.js';\nimport Airtable from \"./data/airtable\";\nimport Orders from \"./data/orders\";\nimport Items from \"./data/items\";\nimport Addons from \"./data/addons\";\nimport logo from './Mr_Yum_logo_white.svg';\nimport classNames from 'classnames';\nimport stub from './data/airtableDatabaseStub.json';\nimport SocketListener from './components/Common/SocketListener';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Jumbotron,\n  Badge,\n} from 'reactstrap';\n\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst connectionStyles = status => {\n  return {\n    height: \"18px\",\n    width: \"18px\",\n    borderRadius: \"10px\",\n    backgroundColor:\n      status === STATUS.CONNECTED\n        ? \"green\"\n        : status === STATUS.CONNECTING\n        ? \"orange\"\n        : \"red\",\n    marginLeft: \"5px\",\n  };\n};\n\nconst statusStyles = {\n  background: \"white\",\n  fontSize: \"16px\",\n  zIndex: \"2\",\n  display: \"flex\",\n  alignItems: \"center\",\n  marginLeft: \"30px\",\n  borderRadius: \"50px\",\n  height: \"40px\",\n  marginTop: \"5px\",\n  padding: \"10px\"\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nconst STATUS = {\n  CONNECTED: \"connected\",\n  CONNECTING: \"connecting\"\n};\n\nconst STATUS_LABELS = {\n  connected: \"Connected\",\n  connecting: \"Connecting\",\n  disconnected: \"Disconnected\",\n};\n\n//////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentView: '#pending',\n    };\n\n    this.channel = null;\n  }\n\n  componentWillMount(){\n    window.location = '#pending';\n  }\n  \n  componentWillUnmount(){\n    localStorage.clear('persist:persistedStore')\n  }\n\n  routeTo(suffix){\n    window.location = `/${suffix}`;\n  }\n\n  clickNav(path){\n    this.setState({currentView: path});\n  }\n\n  render() {\n    // eslint-disable-next-line\n    const {isLoading} = this.props\n\n    const displayedRoutes = {\n      pending: { label: `Pending Orders`, path: '#pending' },\n      ready: { label: `Ready For Pickup`, path: '#ready' },\n      completed: { label: `Completed Orders`, path: '#completed' },\n    };\n\n      console.log(window.location.hash)\n    return (\n      <div style={{display: 'block'}} className=\"App\">\n        <ToastContainer\n          position={toast.POSITION.TOP_RIGHT}\n          autoClose={1000}\n          pauseOnHover={false}\n          pauseOnFocusLoss={false}\n          hideProgressBar={true}\n        />\n        <Navbar className=\"mercNav\" expand=\"md\" fixed=\"top\">\n          <NavbarBrand href=\"/\">\n              <img style={{ height: \"50px\", color: \"blue\" }} src={logo} />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {Object.keys(displayedRoutes).map(key => (\n                <NavItem className={classNames(window.location.hash === '#pending' ? \"nlink\" : \"nLinkSelected\")} >\n                  <div className=\"navigationLink\" onClick ={() => {this.clickNav(displayedRoutes[key].path)}}>\n                    <NavLink className=\"nlink\" href={displayedRoutes[key].path}>\n                    {displayedRoutes[key].label}\n                    </NavLink>\n                    <div className=\"blueRectBelow\"></div>\n                  </div>\n                </NavItem>\n              ))}\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <div className=\"panelContainer\">\n              <SocketListener />\n        </div>\n  </div>);\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  router: state.router,\n  isLoading: state.common.isLoading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}