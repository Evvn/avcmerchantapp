{"ast":null,"code":"import _objectSpread from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nexport var mapOrdersToData = function mapOrdersToData(data) {\n  var orders = data.orders,\n      addons = data.addons,\n      items = data.items;\n  return sortOrders(orders.map(function (order) {\n    var _order$item_id = _slicedToArray(order.item_id, 1),\n        itemId = _order$item_id[0],\n        addons = order.addons,\n        quantity = order.quantity;\n\n    return _objectSpread({}, order, {\n      item: items.find(function (item) {\n        return item.id === itemId;\n      }),\n      addons: (addons || []).map(function (addonId) {\n        return addons.find(function (addon) {\n          return addon.id === addonId;\n        });\n      }),\n      quantity: quantity\n    });\n  }));\n};\nexport var sortByTime = function sortByTime(orders) {\n  return orders.sort(function (a, b) {\n    // Sorts the completed orders by the completed_time field\n    var firstItem = dayjs(a.completed_time ? a.completed_time : a.created_time);\n    var secondItem = dayjs(b.completed_time ? b.completed_time : b.created_time);\n\n    if (firstItem.isBefore(secondItem)) {\n      return 1;\n    }\n\n    if (firstItem.isAfter(secondItem)) {\n      return -1;\n    } // The dates are the same\n\n\n    return 0;\n  });\n};\nexport var sortOrders = function sortOrders(orders) {\n  var pending = sortByTime(orders.filter(function (order) {\n    return !order.processed;\n  }));\n  var ready = sortByTime(orders.filter(function (order) {\n    return !order.processed;\n  }));\n  var completed = sortByTime(orders.filter(function (order) {\n    return !!order.processed;\n  }));\n  return {\n    pending: pending,\n    ready: ready,\n    completed: completed\n  };\n};","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantappN/src/utils/orderUtils.js"],"names":["_","dayjs","mapOrdersToData","data","orders","addons","items","sortOrders","map","order","item_id","itemId","quantity","item","find","id","addonId","addon","sortByTime","sort","a","b","firstItem","completed_time","created_time","secondItem","isBefore","isAfter","pending","filter","processed","ready","completed"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAAA,MAC7BC,MAD6B,GACJD,IADI,CAC7BC,MAD6B;AAAA,MACrBC,MADqB,GACJF,IADI,CACrBE,MADqB;AAAA,MACbC,KADa,GACJH,IADI,CACbG,KADa;AAErC,SAAOC,UAAU,CAACH,MAAM,CAACI,GAAP,CAAW,UAAAC,KAAK,EAAI;AAAA,wCACYA,KADZ,CAC5BC,OAD4B;AAAA,QAClBC,MADkB;AAAA,QACTN,MADS,GACYI,KADZ,CACTJ,MADS;AAAA,QACDO,QADC,GACYH,KADZ,CACDG,QADC;;AAEpC,6BACKH,KADL,EAEK;AACHI,MAAAA,IAAI,EAAEP,KAAK,CAACQ,IAAN,CAAW,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACE,EAAL,KAAYJ,MAAhB;AAAA,OAAf,CADH;AAEHN,MAAAA,MAAM,EAAE,CAACA,MAAM,IAAI,EAAX,EAAeG,GAAf,CAAmB,UAAAQ,OAAO,EAAI;AACpC,eAAOX,MAAM,CAACS,IAAP,CAAY,UAAAG,KAAK;AAAA,iBAAIA,KAAK,CAACF,EAAN,KAAaC,OAAjB;AAAA,SAAjB,CAAP;AACD,OAFO,CAFL;AAKHJ,MAAAA,QAAQ,EAARA;AALG,KAFL;AASD,GAXiB,CAAD,CAAjB;AAYH,CAdM;AAgBP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACd,MAAD,EAAW;AACjC,SAAOA,MAAM,CAACe,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB;AACA,QAAMC,SAAS,GAAGrB,KAAK,CACrBmB,CAAC,CAACG,cAAF,GAAmBH,CAAC,CAACG,cAArB,GAAsCH,CAAC,CAACI,YADnB,CAAvB;AAGA,QAAMC,UAAU,GAAGxB,KAAK,CACtBoB,CAAC,CAACE,cAAF,GAAmBF,CAAC,CAACE,cAArB,GAAsCF,CAAC,CAACG,YADlB,CAAxB;;AAIA,QAAIF,SAAS,CAACI,QAAV,CAAmBD,UAAnB,CAAJ,EAAoC;AAClC,aAAO,CAAP;AACD;;AAED,QAAIH,SAAS,CAACK,OAAV,CAAkBF,UAAlB,CAAJ,EAAmC;AACjC,aAAO,CAAC,CAAR;AACD,KAfwB,CAiBzB;;;AACA,WAAO,CAAP;AACD,GAnBI,CAAP;AAoBH,CArBM;AAwBP,OAAO,IAAMlB,UAAU,GAAG,SAAbA,UAAa,CAACH,MAAD,EAAY;AAClC,MAAMwB,OAAO,GAAGV,UAAU,CAACd,MAAM,CAACyB,MAAP,CAAc,UAAApB,KAAK;AAAA,WAAI,CAACA,KAAK,CAACqB,SAAX;AAAA,GAAnB,CAAD,CAA1B;AACA,MAAMC,KAAK,GAAGb,UAAU,CAACd,MAAM,CAACyB,MAAP,CAAc,UAAApB,KAAK;AAAA,WAAI,CAACA,KAAK,CAACqB,SAAX;AAAA,GAAnB,CAAD,CAAxB;AACA,MAAME,SAAS,GAAGd,UAAU,CAACd,MAAM,CAACyB,MAAP,CAAc,UAAApB,KAAK;AAAA,WAAI,CAAC,CAACA,KAAK,CAACqB,SAAZ;AAAA,GAAnB,CAAD,CAA5B;AAEA,SAAO;AAAEF,IAAAA,OAAO,EAAPA,OAAF;AAAWG,IAAAA,KAAK,EAALA,KAAX;AAAkBC,IAAAA,SAAS,EAATA;AAAlB,GAAP;AAEH,CAPM","sourcesContent":["import _ from 'lodash';\nimport dayjs from 'dayjs';\n\nexport const mapOrdersToData = (data) => {\n    const { orders, addons, items} = data;\n    return sortOrders(orders.map(order => {\n      const { item_id: [itemId], addons, quantity } = order;\n      return {\n        ...order,\n        ...{\n        item: items.find(item => item.id === itemId),\n        addons: (addons || []).map(addonId => {\n          return addons.find(addon => addon.id === addonId);\n        }),\n        quantity\n      }};\n    }));\n};\n\nexport const sortByTime = (orders) =>{\n    return orders.sort((a, b) => {\n        // Sorts the completed orders by the completed_time field\n        const firstItem = dayjs(\n          a.completed_time ? a.completed_time : a.created_time\n        );\n        const secondItem = dayjs(\n          b.completed_time ? b.completed_time : b.created_time\n        );\n\n        if (firstItem.isBefore(secondItem)) {\n          return 1;\n        }\n\n        if (firstItem.isAfter(secondItem)) {\n          return -1;\n        }\n\n        // The dates are the same\n        return 0;\n      });\n}\n\n\nexport const sortOrders = (orders) => {\n    const pending = sortByTime(orders.filter(order => !order.processed));\n    const ready = sortByTime(orders.filter(order => !order.processed));\n    const completed = sortByTime(orders.filter(order => !!order.processed));\n\n    return { pending, ready, completed };\n      \n}"]},"metadata":{},"sourceType":"module"}