{"ast":null,"code":"import _objectSpread from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Cart/CartContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from './actions/actions.js';\nimport PaymentScreen from './PaymentScreen.js';\nimport CartItem from './CartItem.js';\nimport _ from 'lodash'; //css\n\nimport './styles/checkout.scss';\n\nvar CartContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CartContainer, _React$Component);\n\n  function CartContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CartContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CartContainer).call(this, props));\n\n    _this.closePaymentScreen = function () {\n      _this.setState({\n        showPaymentScreen: false\n      });\n    };\n\n    _this.state = {\n      showPaymentScreen: false\n    };\n    _this.updateTotal = _this.updateTotal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CartContainer, [{\n    key: \"getItemSubtotal\",\n    value: function getItemSubtotal(item) {\n      var subtotal = item.price;\n      item.addOns.map(function (addOn) {\n        subtotal = subtotal + addOn['Price (Not Linked)'];\n      });\n      return subtotal;\n    }\n  }, {\n    key: \"getCostDetails\",\n    value: function getCostDetails(items) {\n      var _this2 = this;\n\n      var quantity = 0;\n      var subtotal = 0;\n      items.map(function (item) {\n        quantity = quantity + item.quantity;\n        subtotal = subtotal + quantity * _this2.getItemSubtotal(item);\n      });\n      return {\n        quantity: quantity,\n        subtotal: subtotal\n      };\n    }\n  }, {\n    key: \"getQuantity\",\n    value: function getQuantity(items) {\n      var quantity = 0; // eslint-disable-next-line\n\n      items.map(function (item) {\n        quantity = quantity + item.quantity;\n      });\n      return quantity;\n    }\n  }, {\n    key: \"processItems\",\n    value: function processItems(itemGroups) {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          removeFromCart = _this$props.removeFromCart,\n          currentOrder = _this$props.currentOrder;\n      var subtotal = 0;\n      var processedItems = itemGroups.map(function (itemGroup) {\n        var costDetails = _this3.getCostDetails(currentOrder[itemGroup]);\n\n        subtotal = subtotal + costDetails.subtotal;\n        return React.createElement(CartItem, {\n          addToTotal: _this3.updateTotal,\n          key: itemGroup,\n          itemId: itemGroup,\n          items: _objectSpread({}, currentOrder[itemGroup], costDetails),\n          removeFromCart: removeFromCart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      });\n      return {\n        total: subtotal,\n        processedItems: processedItems\n      };\n    }\n  }, {\n    key: \"openPaymentScreen\",\n    value: function openPaymentScreen() {\n      this.setState({\n        showPaymentScreen: true\n      });\n    }\n  }, {\n    key: \"settlePayment\",\n    value: function settlePayment() {\n      this.setState({\n        showPaymentScreen: false\n      });\n    }\n  }, {\n    key: \"updateTotal\",\n    value: function updateTotal(itemTotal) {\n      var _this$props2 = this.props,\n          updateOrderTotal = _this$props2.updateOrderTotal,\n          orderTotal = _this$props2.orderTotal;\n      console.log(orderTotal);\n      updateOrderTotal(itemTotal + _.cloneDeep(orderTotal));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          paymentRes = _this$props3.paymentRes,\n          currentOrder = _this$props3.currentOrder,\n          removeFromCart = _this$props3.removeFromCart;\n      var itemGroups = Object.keys(currentOrder);\n      var showPaymentScreen = this.state.showPaymentScreen;\n\n      var _this$processItems = this.processItems(itemGroups),\n          total = _this$processItems.total,\n          processedItems = _this$processItems.processedItems;\n\n      if (showPaymentScreen) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(PaymentScreen, {\n          orderTotal: total,\n          closePaymentScreen: this.closePaymentScreen,\n          paymentRes: paymentRes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"cartCont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"venue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Winter Village\"), React.createElement(\"img\", {\n          onClick: function onClick() {\n            window.history.back();\n          },\n          src: \"/icons/arrow-left-solid-white.svg\",\n          className: \"headerBackArrow\",\n          alt: \"back arrow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        })), React.createElement(\"h2\", {\n          className: \"cartHeading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Your Order\"), itemGroups.length === 0 ? React.createElement(\"div\", {\n          className: \"emptyCart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"/icons/cart_icon_sad.svg\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Your cart is empty!\")) : processedItems, React.createElement(\"div\", {\n          className: \"orderTotal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Order Total\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, total.toFixed(2))), React.createElement(\"button\", {\n          className: \"payNowBtn\",\n          onClick: function onClick(e) {\n            _this4.openPaymentScreen();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Checkout\"));\n      }\n    }\n  }]);\n\n  return CartContainer;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentOrder: state.persistentCart.currentOrder,\n    paymentRes: state.persistentCart.paymentRes,\n    orderTotal: state.persistentCart.orderTotal\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Cart/CartContainer.js"],"names":["React","connect","bindActionCreators","actions","PaymentScreen","CartItem","_","CartContainer","props","closePaymentScreen","setState","showPaymentScreen","state","updateTotal","bind","item","subtotal","price","addOns","map","addOn","items","quantity","getItemSubtotal","itemGroups","removeFromCart","currentOrder","processedItems","itemGroup","costDetails","getCostDetails","total","itemTotal","updateOrderTotal","orderTotal","console","log","cloneDeep","paymentRes","Object","keys","processItems","window","history","back","length","toFixed","e","openPaymentScreen","Component","mapDispatchToProps","dispatch","mapStateToProps","persistentCart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as actions from './actions/actions.js';\nimport PaymentScreen from './PaymentScreen.js';\nimport CartItem from './CartItem.js';\nimport _ from 'lodash';\n\n//css\nimport './styles/checkout.scss'\n\nclass CartContainer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showPaymentScreen: false,\n        }\n\n        this.updateTotal = this.updateTotal.bind(this);\n    }\n\n    getItemSubtotal(item) {\n      let subtotal = item.price;\n      item.addOns.map(addOn => {\n        subtotal = subtotal + addOn['Price (Not Linked)'];\n      })\n\n      return subtotal;\n    }\n\n    getCostDetails(items) {\n      let quantity = 0;\n      let subtotal = 0;\n      items.map(item => {\n        quantity = quantity + item.quantity;\n        subtotal = subtotal + (quantity * this.getItemSubtotal(item));\n      });\n      return {quantity, subtotal};\n    };\n\n\n    getQuantity(items){\n        let quantity = 0;\n        // eslint-disable-next-line\n        items.map(item => {\n            quantity = quantity + item.quantity;\n        });\n        return quantity;\n    }\n\n\n    processItems(itemGroups){\n      const {removeFromCart, currentOrder} = this.props;\n      let subtotal = 0;\n\n      const processedItems = itemGroups.map(itemGroup => {\n        const costDetails= this.getCostDetails(currentOrder[itemGroup]);\n        subtotal = subtotal + costDetails.subtotal;\n        return (\n          <CartItem\n            addToTotal={this.updateTotal}\n            key={itemGroup}\n            itemId={itemGroup}\n            items={{...currentOrder[itemGroup], ...costDetails}}\n            removeFromCart={removeFromCart} />\n        );\n      });\n\n\n      return {total: subtotal, processedItems};\n\n\n    }\n\n\n    openPaymentScreen(){\n        this.setState({showPaymentScreen: true})\n    }\n\n    closePaymentScreen = () => {\n      this.setState({showPaymentScreen: false})\n    }\n\n    settlePayment(){\n        this.setState({showPaymentScreen: false})\n    }\n\n    updateTotal(itemTotal){\n      const { updateOrderTotal, orderTotal } = this.props;\n      console.log(orderTotal)\n      updateOrderTotal(itemTotal + _.cloneDeep(orderTotal));\n    }\n\n    render(){\n        const { paymentRes,  currentOrder, removeFromCart  } = this.props;\n        const itemGroups = Object.keys(currentOrder);\n        const {showPaymentScreen} = this.state;\n        const {total, processedItems} = this.processItems(itemGroups);\n        if(showPaymentScreen){\n          return(\n            <div>\n                  <PaymentScreen\n                    orderTotal={total}\n                    closePaymentScreen={this.closePaymentScreen}\n                    paymentRes={paymentRes}\n                  />\n            </div>\n        )\n      } else{\n        \n\n        return (\n          <div className=\"cartCont\">\n            <header className=\"header\">\n              <h1 className=\"venue\">Winter Village</h1>\n              <img onClick={() => {window.history.back()}} src=\"/icons/arrow-left-solid-white.svg\" className=\"headerBackArrow\" alt=\"back arrow\"/>\n            </header>\n            <h2 className=\"cartHeading\">Your Order</h2>\n            { itemGroups.length === 0 ?\n              <div className=\"emptyCart\">\n                <img src=\"/icons/cart_icon_sad.svg\" alt=\"\"/>\n                <span>Your cart is empty!</span>\n              </div>\n              :\n              processedItems\n             }\n            <div className=\"orderTotal\">\n              <span>Order Total</span>\n              <span>{total.toFixed(2)}</span>\n            </div>\n            <button className=\"payNowBtn\" onClick={(e) => {this.openPaymentScreen()}}>Checkout</button>\n          </div>\n        );\n      }\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch)\n\nconst mapStateToProps = state => ({\n  currentOrder: state.persistentCart.currentOrder,\n  paymentRes: state.persistentCart.paymentRes,\n  orderTotal: state.persistentCart.orderTotal,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer)\n"]},"metadata":{},"sourceType":"module"}