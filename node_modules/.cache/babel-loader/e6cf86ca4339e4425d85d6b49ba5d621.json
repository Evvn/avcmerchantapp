{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Common/MenuSearch.js\";\nimport React from 'react';\nimport debounce from 'lodash/debounce';\n\nvar MenuSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MenuSearch, _React$Component);\n\n  function MenuSearch(props) {\n    var _this;\n\n    _classCallCheck(this, MenuSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenuSearch).call(this, props));\n\n    _this.search =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(input) {\n        var blackList, data, _dataKeys, big_bucket, treated_input, _loop, i, expression, sectionsPromise, pricePromise, itemNamePromise, itemDescriptionPromise, _ref2, _ref3, sections, price, itemName, itemDesc, actionables, holder;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                blackList = ['.', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', '-', '='];\n                data = _this.props.data;\n                _dataKeys = Object.keys(data.menuByItem);\n                big_bucket = [];\n                treated_input = ''; // sanitize input\n\n                _loop = function _loop(i) {\n                  var character = input.charAt(i);\n                  var found = blackList.find(function (element) {\n                    return element == character;\n                  });\n\n                  if (found) {\n                    treated_input = \"\".concat(treated_input, \"\\\\\").concat(character);\n                  } else {\n                    treated_input = \"\".concat(treated_input).concat(input.charAt(i));\n                  }\n                };\n\n                for (i = 0; i < input.length; i++) {\n                  _loop(i);\n                } // core\n\n\n                if (!treated_input) {\n                  _context.next = 28;\n                  break;\n                }\n\n                expression = new RegExp(\"\".concat(treated_input), 'gi'); // initial pruning of results\n\n                sectionsPromise = new Promise(function (resolve) {\n                  var bucket = [];\n\n                  for (var _i = 0, _dataKeys2 = _dataKeys; _i < _dataKeys2.length; _i++) {\n                    var key = _dataKeys2[_i];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['category'])) {\n                      var _fields = data.menuByItem[key].fields;\n\n                      var searchScore = _this.score(_fields['category'].toString(), expression);\n\n                      bucket.push({\n                        result: _fields['category'],\n                        score: searchScore,\n                        id: _fields.id\n                      });\n                    }\n                  }\n\n                  resolve(bucket);\n                });\n                pricePromise = new Promise(function (resolve) {\n                  var bucket = [];\n                  var expression = new RegExp(\"\".concat(treated_input), 'gi');\n\n                  for (var _i2 = 0, _dataKeys3 = _dataKeys; _i2 < _dataKeys3.length; _i2++) {\n                    var key = _dataKeys3[_i2];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['price'])) {\n                      var _fields2 = data.menuByItem[key].fields;\n\n                      var searchScore = _this.score(_fields2['price'].toString(), expression, 'price');\n\n                      bucket.push({\n                        result: _fields2['price'],\n                        score: searchScore,\n                        id: _fields2.id\n                      });\n                    }\n                  }\n\n                  resolve(bucket);\n                });\n                itemNamePromise = new Promise(function (resolve) {\n                  var bucket = [];\n\n                  for (var _i3 = 0, _dataKeys4 = _dataKeys; _i3 < _dataKeys4.length; _i3++) {\n                    var key = _dataKeys4[_i3];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['name'])) {\n                      var _fields3 = data.menuByItem[key].fields;\n\n                      var searchScore = _this.score(_fields3['name'].toString(), expression);\n\n                      bucket.push({\n                        result: _fields3['name'],\n                        score: searchScore,\n                        id: _fields3.id\n                      });\n                    }\n                  }\n\n                  resolve(bucket);\n                });\n                itemDescriptionPromise = new Promise(function (resolve) {\n                  var bucket = [];\n\n                  for (var _i4 = 0, _dataKeys5 = _dataKeys; _i4 < _dataKeys5.length; _i4++) {\n                    var key = _dataKeys5[_i4];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['description'])) {\n                      var _fields4 = data.menuByItem[key].fields;\n                      var searchScore = _fields4['description'] ? _this.score(_fields4['description'].toString(), expression) : '0.000';\n                      bucket.push({\n                        result: _fields4['description'],\n                        score: searchScore,\n                        id: _fields4.id\n                      });\n                    }\n                  }\n\n                  resolve(bucket);\n                }); // wait for parallel loops to finish\n\n                _context.next = 15;\n                return Promise.all([sectionsPromise, pricePromise, itemNamePromise, itemDescriptionPromise]);\n\n              case 15:\n                _ref2 = _context.sent;\n                _ref3 = _slicedToArray(_ref2, 4);\n                sections = _ref3[0];\n                price = _ref3[1];\n                itemName = _ref3[2];\n                itemDesc = _ref3[3];\n                // concat to one array\n                big_bucket = big_bucket.concat(sections, price, itemName, itemDesc);\n                actionables = []; // filters out and scores duplicate id's\n\n                holder = {};\n\n                for (i = 0; i < big_bucket.length; i++) {\n                  if (holder.hasOwnProperty(big_bucket[i].id)) {\n                    holder[big_bucket[i].id] = _objectSpread({}, big_bucket[i], {\n                      score: (parseFloat(big_bucket[i].score) + 0.8).toString()\n                    });\n                  } else {\n                    holder[big_bucket[i].id] = _objectSpread({}, big_bucket[i]);\n                  }\n                }\n\n                Object.keys(holder).map(function (x) {\n                  return actionables.push(holder[x]);\n                }); // sort by match score (highest - lowest)\n\n                actionables.sort(function (a, b) {\n                  return a.score < b.score ? 1 : b.score < a.score ? -1 : 0;\n                });\n                return _context.abrupt(\"return\", actionables);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.score = function (entry, regex, field) {\n      var matched = entry.match(regex);\n\n      if (matched) {\n        var result;\n\n        switch (field) {\n          case 'price':\n            var weight = 0; // weight decimal places and commas(maybe?) higher for prices\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = entry[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var char = _step.value;\n\n                if (char === '.' || char === ',') {\n                  weight += .20;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            result = matched.length / entry.length + weight;\n            break;\n\n          default:\n            result = matched.length / entry.length;\n            break;\n        }\n\n        return result.toFixed(3);\n      }\n    };\n\n    _this.handleInput = function (value) {\n      var onInput = _this.props.onInput;\n\n      _this.search(value).then(function (result) {\n        if (result) {\n          onInput(result);\n        } else {\n          onInput([]);\n        }\n      });\n    };\n\n    _this.debounce_input = debounce(function (text) {\n      return _this.handleInput(text);\n    }, 250);\n    return _this;\n  }\n\n  _createClass(MenuSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        placeholder: \"Search\",\n        onKeyUp: function onKeyUp(e) {\n          var text = e.target.value;\n\n          _this2.debounce_input(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MenuSearch;\n}(React.Component);\n\nexport default MenuSearch;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Common/MenuSearch.js"],"names":["React","debounce","MenuSearch","props","search","input","blackList","data","_dataKeys","Object","keys","menuByItem","big_bucket","treated_input","i","character","charAt","found","find","element","length","expression","RegExp","sectionsPromise","Promise","resolve","bucket","key","fields","test","searchScore","score","toString","push","result","id","pricePromise","itemNamePromise","itemDescriptionPromise","all","sections","price","itemName","itemDesc","concat","actionables","holder","hasOwnProperty","parseFloat","map","x","sort","a","b","entry","regex","field","matched","match","weight","char","toFixed","handleInput","value","onInput","then","debounce_input","text","e","target","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport debounce from 'lodash/debounce';\n\n\n\nclass MenuSearch extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    search = async input => {\n        const blackList = ['.', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', '-', '='];\n        const {data} = this.props;\n        const _dataKeys = Object.keys(data.menuByItem);\n        let big_bucket = [];\n        let treated_input = '';\n\n        // sanitize input\n        for (let i = 0; i < input.length; i++) {\n            let character = input.charAt(i);\n            let found = blackList.find((element) => element == character);\n\n            if (found) {\n                treated_input = `${treated_input}\\\\${character}`;\n            } else {\n                treated_input = `${treated_input}${input.charAt(i)}`;\n            }\n        }\n\n        // core\n        if (treated_input) {\n            let expression = new RegExp(`${treated_input}`, 'gi');\n\n            // initial pruning of results\n            let sectionsPromise = new Promise(resolve => {\n                let bucket = [];\n                for (const key of _dataKeys) {\n                    let fields = data.menuByItem[key].fields;\n                    if (expression.test(fields['category'])) {\n                        let fields = data.menuByItem[key].fields;\n                        let searchScore = this.score(fields['category'].toString(), expression);\n                        bucket.push({result: fields['category'], score: searchScore, id: fields.id});\n                    }\n                }\n\n                resolve(bucket);\n            });\n\n            let pricePromise = new Promise(resolve => {\n                let bucket = [];\n                let expression = new RegExp(`${treated_input}`, 'gi');\n                for (const key of _dataKeys) {\n                    let fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['price'])) {\n                        let fields = data.menuByItem[key].fields;\n                        let searchScore = this.score(fields['price'].toString(), expression, 'price');\n                        bucket.push({result: fields['price'], score: searchScore, id: fields.id});\n                    }\n                }\n\n                resolve(bucket);\n            });\n\n            let itemNamePromise = new Promise(resolve => {\n                let bucket = [];\n                for (const key of _dataKeys) {\n                    let fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['name'])) {\n                        let fields = data.menuByItem[key].fields;\n                        let searchScore = this.score(fields['name'].toString(), expression);\n                        bucket.push({result: fields['name'], score: searchScore, id: fields.id});\n                    }\n                }\n\n                resolve(bucket);\n            });\n\n            let itemDescriptionPromise = new Promise(resolve => {\n                let bucket = [];\n                for (const key of _dataKeys) {\n                    let fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['description'])) {\n                        let fields = data.menuByItem[key].fields;\n                        let searchScore = fields['description'] ? this.score(fields['description'].toString(), expression): '0.000';\n                        bucket.push({result: fields['description'], score: searchScore, id: fields.id});\n                    }\n                }\n\n                resolve(bucket);\n            });\n\n            // wait for parallel loops to finish\n            let [sections, price, itemName, itemDesc] = await Promise.all([sectionsPromise, pricePromise, itemNamePromise, itemDescriptionPromise]);\n\n            // concat to one array\n            big_bucket = big_bucket.concat(sections, price, itemName, itemDesc);\n\n            let actionables = [];\n\n            // filters out and scores duplicate id's\n            let holder = {};\n            for (let i = 0; i < big_bucket.length; i++) {\n\n                if (holder.hasOwnProperty(big_bucket[i].id)) {\n                    holder[big_bucket[i].id] = {...big_bucket[i], score: (parseFloat(big_bucket[i].score) + 0.8).toString()};\n                } else {\n                    holder[big_bucket[i].id] = {...big_bucket[i]};\n                }\n            }\n\n            Object.keys(holder).map(x => actionables.push(holder[x]));\n\n            // sort by match score (highest - lowest)\n            actionables.sort((a,b) => (a.score < b.score) ? 1 : ((b.score < a.score) ? -1 : 0));\n\n            return actionables;\n        }\n    }\n\n\n    score = (entry, regex, field) => {\n        let matched = entry.match(regex);\n        if (matched) {\n            let result;\n            switch (field) {\n                case 'price':\n                    let weight = 0;\n                    // weight decimal places and commas(maybe?) higher for prices\n                    for (let char of entry) {\n                        if (char === '.' || char === ',') {\n                            weight += .20;\n                        }\n                    }\n\n                    result = (matched.length / entry.length) + weight;\n                    break;\n\n                default:\n                    result = matched.length / entry.length;\n                    break;\n            }\n            return result.toFixed(3);\n        }\n    }\n\n\n    handleInput = (value) => {\n        const {onInput} = this.props;\n\n        this.search(value).then(result => {\n            if (result) {\n                onInput(result);\n            } else {\n                onInput([]);\n            }\n        });\n    }\n\n    // group events\n    debounce_input = debounce((text) => this.handleInput(text), 250);\n\n    render() {\n        return (\n            <div>\n                <input \n                    type=\"search\" \n                    placeholder=\"Search\" \n                    onKeyUp={(e) => {\n                        let text = e.target.value;\n                        this.debounce_input(text);\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MenuSearch;\n"]},"metadata":{},"sourceType":"module"}