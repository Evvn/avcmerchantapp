{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(sendSms),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher);\n\n//import * as actionTypes from '../../components/Menu/actions/actionTypes/actionTypes.js';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport callBff from '../callBff.js';\nexport function sendSms(message) {\n  var res;\n  return _regeneratorRuntime.wrap(function sendSms$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return callBff(\"ordering/sms\", 'POST', {\n            message: message\n          }).then(function (response) {\n            return response;\n          });\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return put({\n            type: 'SEND_SMS_SUCCESS',\n            res: res\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n;\nexport function actionWatcher() {\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return [takeLatest('SEND_SMS_REQUEST', sendSms)];\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantappN/src/integration/sagas/ordersIntegration.js"],"names":["sendSms","actionWatcher","takeLatest","put","callBff","message","then","response","res","type"],"mappings":";;;;yBAMiBA,O;;;yBASAC,a;;AAfjB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAIA,OAAO,SAAUJ,OAAV,CAAkBK,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,iBAAMD,OAAO,iBAAiB,MAAjB,EAAyB;AAAEC,YAAAA,OAAO,EAAPA;AAAF,WAAzB,CAAP,CACbC,IADa,CACR,UAAAC,QAAQ;AAAA,mBAAIA,QAAJ;AAAA,WADA,CAAN;;AADP;AACCC,UAAAA,GADD;AAAA;AAGD,iBAAML,GAAG,CAAC;AACRM,YAAAA,IAAI,EAAE,kBADE;AAERD,YAAAA,GAAG,EAAHA;AAFQ,WAAD,CAAT;;AAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAON;AAED,OAAO,SAAUP,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,CACJC,UAAU,CAAC,kBAAD,EAAqBF,OAArB,CADN,CAAN;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//import * as actionTypes from '../../components/Menu/actions/actionTypes/actionTypes.js';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport callBff from '../callBff.js'\n\n\n\nexport function* sendSms(message) {\n  const res = yield callBff(`ordering/sms`, 'POST', { message })\n      .then(response => response)\n      yield put({\n        type: 'SEND_SMS_SUCCESS',\n        res,\n      })\n};\n\nexport function* actionWatcher() {\n  yield [\n    takeLatest('SEND_SMS_REQUEST', sendSms),\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}