{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/michaelfoster/Git/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/avcmerchantapp/src/components/OrderPanel.js\";\nimport React from 'react';\nimport OrderRow from './OrderRow.js';\nimport _ from 'lodash';\n\nvar OrderPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderPanel, _React$Component);\n\n  function OrderPanel(props) {\n    var _this;\n\n    _classCallCheck(this, OrderPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderPanel).call(this, props));\n    _this.state = {\n      internalLoad: false,\n      cached: false\n    };\n    _this.cached = false;\n    _this.renderOrderItem = _this.renderOrderItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(OrderPanel, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var orders = this.renderOrderItem();\n      this.cached = orders;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      if (!_.isEqual(this.props.orders, this.state.cached)) {\n        var orders = this.renderOrderItem();\n        this.cached = orders;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps, nextState) {\n      if (!nextProps.new) {\n        return false;\n      } else {\n        console.log('get orders');\n        this.props.getOrders();\n      }\n    }\n  }, {\n    key: \"groupByOrderId\",\n    value: function groupByOrderId(orders) {\n      var _this$props = this.props,\n          sendSms = _this$props.sendSms,\n          updateAirtable = _this$props.updateAirtable,\n          label = _this$props.label;\n      var orderIds = [];\n      var groupedOrders = {};\n      orders.map(function (order) {\n        if (!orderIds.includes(order.stripe_transaction_id)) {\n          orderIds.push(order.stripe_transaction_id);\n          groupedOrders[order.stripe_transaction_id] = [order];\n        } else {\n          groupedOrders[order.stripe_transaction_id].push(order);\n        }\n      });\n      return orderIds.map(function (orderId) {\n        var items = groupedOrders[orderId];\n        return React.createElement(OrderRow, {\n          items: items,\n          sendSms: sendSms,\n          updateAirtable: updateAirtable,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"renderOrderItem\",\n    value: function renderOrderItem() {\n      var orders = this.props.orders;\n      return this.groupByOrderId(orders);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          header = _this$props2.header,\n          hasOrders = _this$props2.hasOrders,\n          label = _this$props2.label,\n          isLoading = _this$props2.isLoading;\n      var Labels = {\n        pending: 'Pending Orders',\n        ready: 'Ready For Pickup',\n        completed: 'Completed Orders'\n      };\n      var noOrderStyles = {\n        padding: \"20px\"\n      };\n      var show = this.cashed ? this.cached : 'Loading';\n\n      if (window.location.hash.replace('#', '') === label) {\n        return React.createElement(\"div\", {\n          style: {\n            marginTop: '80px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            marginLeft: '20px',\n            paddingTop: '36px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"\".concat(Labels[window.location.hash.replace('#', '')]))), isLoading ? show : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, hasOrders ? this.renderOrderItem() : 'No Orders'));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OrderPanel;\n}(React.Component);\n\nexport default OrderPanel;","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantapp/src/components/OrderPanel.js"],"names":["React","OrderRow","_","OrderPanel","props","state","internalLoad","cached","renderOrderItem","bind","orders","isEqual","nextProps","nextState","new","console","log","getOrders","sendSms","updateAirtable","label","orderIds","groupedOrders","map","order","includes","stripe_transaction_id","push","orderId","items","groupByOrderId","header","hasOrders","isLoading","Labels","pending","ready","completed","noOrderStyles","padding","show","cashed","window","location","hash","replace","marginTop","marginLeft","paddingTop","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAW;AACPC,MAAAA,YAAY,EAAE,KADP;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAAX;AAKA,UAAKA,MAAL,GAAc,KAAd;AAEA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AAVc;AAWjB;;;;yCAEmB;AAChB,UAAMC,MAAM,GAAG,KAAKF,eAAL,EAAf;AACA,WAAKD,MAAL,GAAeG,MAAf;AACH;;;0CAEoB;AACjB,UAAG,CAACR,CAAC,CAACS,OAAF,CAAU,KAAKP,KAAL,CAAWM,MAArB,EAA6B,KAAKL,KAAL,CAAWE,MAAxC,CAAJ,EAAoD;AAChD,YAAMG,MAAM,GAAG,KAAKF,eAAL,EAAf;AACA,aAAKD,MAAL,GAAcG,MAAd;AACH;AACJ;;;uCAEkBE,S,EAAWC,S,EAAW;AACrC,UAAI,CAACD,SAAS,CAACE,GAAf,EAAoB;AAClB,eAAO,KAAP;AACD,OAFD,MAEO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,aAAKZ,KAAL,CAAWa,SAAX;AACH;AACF;;;mCAIYP,M,EAAO;AAAA,wBACuB,KAAKN,KAD5B;AAAA,UACXc,OADW,eACXA,OADW;AAAA,UACFC,cADE,eACFA,cADE;AAAA,UACcC,KADd,eACcA,KADd;AAElB,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACAZ,MAAAA,MAAM,CAACa,GAAP,CAAW,UAAAC,KAAK,EAAI;AAChB,YAAG,CAACH,QAAQ,CAACI,QAAT,CAAkBD,KAAK,CAACE,qBAAxB,CAAJ,EAAmD;AAC/CL,UAAAA,QAAQ,CAACM,IAAT,CAAcH,KAAK,CAACE,qBAApB;AACAJ,UAAAA,aAAa,CAACE,KAAK,CAACE,qBAAP,CAAb,GAA6C,CAACF,KAAD,CAA7C;AACH,SAHD,MAII;AACAF,UAAAA,aAAa,CAACE,KAAK,CAACE,qBAAP,CAAb,CAA2CC,IAA3C,CAAgDH,KAAhD;AACH;AACJ,OARD;AAYA,aAAOH,QAAQ,CAACE,GAAT,CAAa,UAAAK,OAAO,EAAI;AAC3B,YAAMC,KAAK,GAAGP,aAAa,CAACM,OAAD,CAA3B;AACA,eACI,oBAAC,QAAD;AACI,UAAA,KAAK,EAAEC,KADX;AAEI,UAAA,OAAO,EAAEX,OAFb;AAGI,UAAA,cAAc,EAAEC,cAHpB;AAII,UAAA,KAAK,EAAEC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,OAVM,CAAP;AAeH;;;sCACa;AAAA,UACHV,MADG,GACO,KAAKN,KADZ,CACHM,MADG;AAEV,aAAO,KAAKoB,cAAL,CAAoBpB,MAApB,CAAP;AACH;;;6BAEO;AAAA,yBAC2C,KAAKN,KADhD;AAAA,UACG2B,MADH,gBACGA,MADH;AAAA,UACWC,SADX,gBACWA,SADX;AAAA,UACsBZ,KADtB,gBACsBA,KADtB;AAAA,UAC6Ba,SAD7B,gBAC6BA,SAD7B;AAEJ,UAAMC,MAAM,GAAE;AACVC,QAAAA,OAAO,EAAE,gBADC;AAEVC,QAAAA,KAAK,EAAE,kBAFG;AAGVC,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKA,UAAMC,aAAa,GAAG;AAClBC,QAAAA,OAAO,EAAE;AADS,OAAtB;AAGA,UAAMC,IAAI,GAAG,KAAKC,MAAL,GAAc,KAAKlC,MAAnB,GAA4B,SAAzC;;AACA,UAAGmC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,MAA0CzB,KAA7C,EAAmD;AACnD,eACI;AAAK,UAAA,KAAK,EAAE;AAAC0B,YAAAA,SAAS,EAAE;AAAZ,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE,MAAb;AAAqBC,YAAAA,UAAU,EAAC;AAAhC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAQd,MAAM,CAACQ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,CAAD,CAAd,EADA,CADJ,EAIKZ,SAAS,GAAGO,IAAH,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKR,SAAS,GAAG,KAAKxB,eAAL,EAAH,GAA4B,WAD1C,CALR,CADJ;AAWG;;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EApGoBR,KAAK,CAACiD,S;;AAuG/B,eAAe9C,UAAf","sourcesContent":["import React from 'react';\nimport OrderRow from './OrderRow.js';\nimport _ from 'lodash';\n\nclass OrderPanel extends React.Component{\n\n    constructor(props){\n        super(props);\n        \n        this.state={\n            internalLoad: false,\n            cached: false,\n        }\n\n        this.cached = false\n\n        this.renderOrderItem = this.renderOrderItem.bind(this);\n    }\n\n    componentWillMount(){\n        const orders = this.renderOrderItem();\n        this.cached =  orders;\n    }\n\n    componentWillUpdate(){\n        if(!_.isEqual(this.props.orders, this.state.cached)){\n            const orders = this.renderOrderItem();\n            this.cached = orders;\n        }\n    }\n\n    componentDidUpdate(nextProps, nextState) {\n        if (!nextProps.new) {\n          return false;\n        } else {\n            console.log('get orders')\n            this.props.getOrders();\n        }\n      }\n\n\n\n    groupByOrderId(orders){\n        const {sendSms, updateAirtable, label} = this.props;\n        const orderIds = [];\n        const groupedOrders = {};\n        orders.map(order => {\n            if(!orderIds.includes(order.stripe_transaction_id)){\n                orderIds.push(order.stripe_transaction_id)\n                groupedOrders[order.stripe_transaction_id] = [order];\n            }\n            else{\n                groupedOrders[order.stripe_transaction_id].push(order); \n            }\n        });\n\n\n        \n        return orderIds.map(orderId => {\n            const items = groupedOrders[orderId];\n            return (\n                <OrderRow\n                    items={items}\n                    sendSms={sendSms}\n                    updateAirtable={updateAirtable}\n                    label={label}\n                />\n            )\n        })\n\n\n\n\n    }\nrenderOrderItem() {\n        const {orders} = this.props;\n        return this.groupByOrderId(orders);\n    }\n\n    render(){\n        const {header, hasOrders, label, isLoading } = this.props;\n        const Labels ={\n            pending: 'Pending Orders',\n            ready: 'Ready For Pickup',\n            completed: 'Completed Orders',\n        }\n        const noOrderStyles = {\n            padding: \"20px\"\n        };\n        const show = this.cashed ? this.cached : 'Loading';\n        if(window.location.hash.replace('#', '') === label){\n        return(\n            <div style={{marginTop: '80px'}} >\n                <div style={{marginLeft: '20px', paddingTop:'36px'}}>\n                <h4>{`${Labels[window.location.hash.replace('#', '')]}`}</h4>\n                </div>\n                {isLoading ? show: (\n                    <div>\n                        {hasOrders ? this.renderOrderItem() : 'No Orders'}\n                    </div>\n                )}\n          </div>\n        );}\n        return <div></div>\n    }\n}\n\nexport default OrderPanel;"]},"metadata":{},"sourceType":"module"}