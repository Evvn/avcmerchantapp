{"ast":null,"code":"import _classCallCheck from \"/Users/evan/pitchblak/v2mryum/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/pitchblak/v2mryum/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/pitchblak/v2mryum/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/pitchblak/v2mryum/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/pitchblak/v2mryum/avcmerchantapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/pitchblak/v2mryum/avcmerchantapp/src/components/Common/SocketListener.js\";\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport OrderPanel from \"../OrderPanel.js\";\nimport _ from \"lodash\";\nimport * as actions from \"./actions/actions.js\";\n\nvar SocketListener =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SocketListener, _React$Component);\n\n  function SocketListener(props) {\n    var _this;\n\n    _classCallCheck(this, SocketListener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SocketListener).call(this, props));\n    _this.state = {\n      response: false,\n      update: false,\n      endpoint: process.env.REACT_APP_BFF_BASE_URL\n    };\n    _this.old = false;\n    _this.response = false;\n    _this.new = false;\n    return _this;\n  }\n\n  _createClass(SocketListener, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          getOrders = _this$props.getOrders,\n          orders = _this$props.orders;\n      getOrders();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint;\n      var socket = socketIOClient(endpoint);\n      socket.on(\"FromAPI\", function (data) {\n        if (!_.isEqual(JSON.stringify(data), JSON.stringify(_this2.response))) {\n          console.log(\"called\");\n          _this2.old = _this2.response;\n          _this2.response = data;\n\n          if (!_.isEqual(_this2.old, _this2.response)) {\n            // update sound here\n            new Audio(\"/coin.mp3\").play();\n\n            _this2.forceUpdate();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          orders = _this$props2.orders,\n          isLoading = _this$props2.isLoading,\n          sendSms = _this$props2.sendSms,\n          updateAirtable = _this$props2.updateAirtable,\n          getOrders = _this$props2.getOrders,\n          label = _this$props2.label;\n      var pendingOrders = !isLoading ? orders.pending : [];\n      var completedOrders = !isLoading ? orders.completed : [];\n      var hasPendingOrders = !isLoading ? !!pendingOrders.length : false;\n      var hasCompletedOrders = !isLoading ? !!completedOrders.length : false;\n      var readyOrders = !isLoading ? orders.ready : [];\n      var hasReadyOrders = !isLoading ? !!readyOrders.length : false;\n      var ordersOut;\n      var hasOrders;\n\n      if (window.location.hash === \"#pending\") {\n        ordersOut = pendingOrders;\n        hasOrders = hasPendingOrders;\n      } else if (window.location.hash === \"#completed\") {\n        ordersOut = completedOrders;\n        hasOrders = hasCompletedOrders;\n      } else {\n        ordersOut = readyOrders;\n        hasOrders = hasReadyOrders;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(OrderPanel, {\n        hasOrders: hasPendingOrders,\n        orders: pendingOrders,\n        label: \"pending\",\n        header: \"Pending Orders\",\n        sendSms: sendSms,\n        updateAirtable: updateAirtable,\n        isLoading: isLoading,\n        getOrders: getOrders,\n        new: !_.isEqual(this.response, this.old),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(OrderPanel, {\n        hasOrders: hasReadyOrders,\n        orders: readyOrders,\n        label: \"ready\",\n        header: \"Ready Orders\",\n        sendSms: sendSms,\n        updateAirtable: updateAirtable,\n        isLoading: isLoading,\n        getOrders: getOrders,\n        new: !_.isEqual(this.response, this.old),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(OrderPanel, {\n        hasOrders: hasCompletedOrders,\n        orders: completedOrders,\n        label: \"completed\",\n        header: \"Completed Orders\",\n        sendSms: sendSms,\n        updateAirtable: updateAirtable,\n        isLoading: isLoading,\n        getOrders: getOrders,\n        new: !_.isEqual(this.response, this.old),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SocketListener;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router,\n    orders: state.common.orders,\n    isLoading: state.common.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketListener);","map":{"version":3,"sources":["/Users/evan/pitchblak/v2mryum/avcmerchantapp/src/components/Common/SocketListener.js"],"names":["React","socketIOClient","connect","bindActionCreators","OrderPanel","_","actions","SocketListener","props","state","response","update","endpoint","process","env","REACT_APP_BFF_BASE_URL","old","new","getOrders","orders","socket","on","data","isEqual","JSON","stringify","console","log","Audio","play","forceUpdate","isLoading","sendSms","updateAirtable","label","pendingOrders","pending","completedOrders","completed","hasPendingOrders","length","hasCompletedOrders","readyOrders","ready","hasReadyOrders","ordersOut","hasOrders","window","location","hash","Component","mapDispatchToProps","dispatch","mapStateToProps","router","common"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHX,KAAb;AAMA,UAAKC,GAAL,GAAW,KAAX;AACA,UAAKN,QAAL,GAAgB,KAAhB;AACA,UAAKO,GAAL,GAAW,KAAX;AAXiB;AAYlB;;;;yCAEoB;AAAA,wBACW,KAAKT,KADhB;AAAA,UACXU,SADW,eACXA,SADW;AAAA,UACAC,MADA,eACAA,MADA;AAEnBD,MAAAA,SAAS;AACV;;;wCAEmB;AAAA;;AAAA,UACVN,QADU,GACG,KAAKH,KADR,CACVG,QADU;AAElB,UAAMQ,MAAM,GAAGnB,cAAc,CAACW,QAAD,CAA7B;AACAQ,MAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAAAC,IAAI,EAAI;AAC3B,YAAI,CAACjB,CAAC,CAACkB,OAAF,CAAUC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAV,EAAgCE,IAAI,CAACC,SAAL,CAAe,MAAI,CAACf,QAApB,CAAhC,CAAL,EAAqE;AACnEgB,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAA,MAAI,CAACX,GAAL,GAAW,MAAI,CAACN,QAAhB;AACA,UAAA,MAAI,CAACA,QAAL,GAAgBY,IAAhB;;AACA,cAAI,CAACjB,CAAC,CAACkB,OAAF,CAAU,MAAI,CAACP,GAAf,EAAoB,MAAI,CAACN,QAAzB,CAAL,EAAyC;AACvC;AACA,gBAAIkB,KAAJ,CAAU,WAAV,EAAuBC,IAAvB;;AACA,YAAA,MAAI,CAACC,WAAL;AACD;AACF;AACF,OAXD;AAYD;;;6BAEQ;AAAA,yBAQH,KAAKtB,KARF;AAAA,UAELW,MAFK,gBAELA,MAFK;AAAA,UAGLY,SAHK,gBAGLA,SAHK;AAAA,UAILC,OAJK,gBAILA,OAJK;AAAA,UAKLC,cALK,gBAKLA,cALK;AAAA,UAMLf,SANK,gBAMLA,SANK;AAAA,UAOLgB,KAPK,gBAOLA,KAPK;AASP,UAAMC,aAAa,GAAG,CAACJ,SAAD,GAAaZ,MAAM,CAACiB,OAApB,GAA8B,EAApD;AACA,UAAMC,eAAe,GAAG,CAACN,SAAD,GAAaZ,MAAM,CAACmB,SAApB,GAAgC,EAAxD;AACA,UAAMC,gBAAgB,GAAG,CAACR,SAAD,GAAa,CAAC,CAACI,aAAa,CAACK,MAA7B,GAAsC,KAA/D;AACA,UAAMC,kBAAkB,GAAG,CAACV,SAAD,GAAa,CAAC,CAACM,eAAe,CAACG,MAA/B,GAAwC,KAAnE;AACA,UAAME,WAAW,GAAG,CAACX,SAAD,GAAaZ,MAAM,CAACwB,KAApB,GAA4B,EAAhD;AACA,UAAMC,cAAc,GAAG,CAACb,SAAD,GAAa,CAAC,CAACW,WAAW,CAACF,MAA3B,GAAoC,KAA3D;AAEA,UAAIK,SAAJ;AACA,UAAIC,SAAJ;;AACA,UAAIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,UAA7B,EAAyC;AACvCJ,QAAAA,SAAS,GAAGV,aAAZ;AACAW,QAAAA,SAAS,GAAGP,gBAAZ;AACD,OAHD,MAGO,IAAIQ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,YAA7B,EAA2C;AAChDJ,QAAAA,SAAS,GAAGR,eAAZ;AACAS,QAAAA,SAAS,GAAGL,kBAAZ;AACD,OAHM,MAGA;AACLI,QAAAA,SAAS,GAAGH,WAAZ;AACAI,QAAAA,SAAS,GAAGF,cAAZ;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAEL,gBADb;AAEE,QAAA,MAAM,EAAEJ,aAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,MAAM,EAAC,gBAJT;AAKE,QAAA,OAAO,EAAEH,OALX;AAME,QAAA,cAAc,EAAEC,cANlB;AAOE,QAAA,SAAS,EAAEF,SAPb;AAQE,QAAA,SAAS,EAAEb,SARb;AASE,QAAA,GAAG,EAAE,CAACb,CAAC,CAACkB,OAAF,CAAU,KAAKb,QAAf,EAAyB,KAAKM,GAA9B,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAaE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE4B,cADb;AAEE,QAAA,MAAM,EAAEF,WAFV;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,MAAM,EAAC,cAJT;AAKE,QAAA,OAAO,EAAEV,OALX;AAME,QAAA,cAAc,EAAEC,cANlB;AAOE,QAAA,SAAS,EAAEF,SAPb;AAQE,QAAA,SAAS,EAAEb,SARb;AASE,QAAA,GAAG,EAAE,CAACb,CAAC,CAACkB,OAAF,CAAU,KAAKb,QAAf,EAAyB,KAAKM,GAA9B,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAwBE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAEyB,kBADb;AAEE,QAAA,MAAM,EAAEJ,eAFV;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,MAAM,EAAC,kBAJT;AAKE,QAAA,OAAO,EAAEL,OALX;AAME,QAAA,cAAc,EAAEC,cANlB;AAOE,QAAA,SAAS,EAAEF,SAPb;AAQE,QAAA,SAAS,EAAEb,SARb;AASE,QAAA,GAAG,EAAE,CAACb,CAAC,CAACkB,OAAF,CAAU,KAAKb,QAAf,EAAyB,KAAKM,GAA9B,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,CADF;AAsCD;;;;EAvG0BhB,KAAK,CAACkD,S;;AA0GnC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIjD,kBAAkB,CAACG,OAAD,EAAU8C,QAAV,CAAtB;AAAA,CAAnC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA5C,KAAK;AAAA,SAAK;AAChC6C,IAAAA,MAAM,EAAE7C,KAAK,CAAC6C,MADkB;AAEhCnC,IAAAA,MAAM,EAAEV,KAAK,CAAC8C,MAAN,CAAapC,MAFW;AAGhCY,IAAAA,SAAS,EAAEtB,KAAK,CAAC8C,MAAN,CAAaxB;AAHQ,GAAL;AAAA,CAA7B;;AAMA,eAAe7B,OAAO,CACpBmD,eADoB,EAEpBF,kBAFoB,CAAP,CAGb5C,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport OrderPanel from \"../OrderPanel.js\";\nimport _ from \"lodash\";\n\nimport * as actions from \"./actions/actions.js\";\n\nclass SocketListener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: false,\n      update: false,\n      endpoint: process.env.REACT_APP_BFF_BASE_URL\n    };\n\n    this.old = false;\n    this.response = false;\n    this.new = false;\n  }\n\n  componentWillMount() {\n    const { getOrders, orders } = this.props;\n    getOrders();\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"FromAPI\", data => {\n      if (!_.isEqual(JSON.stringify(data), JSON.stringify(this.response))) {\n        console.log(\"called\");\n        this.old = this.response;\n        this.response = data;\n        if (!_.isEqual(this.old, this.response)) {\n          // update sound here\n          new Audio(\"/coin.mp3\").play();\n          this.forceUpdate();\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      orders,\n      isLoading,\n      sendSms,\n      updateAirtable,\n      getOrders,\n      label\n    } = this.props;\n    const pendingOrders = !isLoading ? orders.pending : [];\n    const completedOrders = !isLoading ? orders.completed : [];\n    const hasPendingOrders = !isLoading ? !!pendingOrders.length : false;\n    const hasCompletedOrders = !isLoading ? !!completedOrders.length : false;\n    const readyOrders = !isLoading ? orders.ready : [];\n    const hasReadyOrders = !isLoading ? !!readyOrders.length : false;\n\n    let ordersOut;\n    let hasOrders;\n    if (window.location.hash === \"#pending\") {\n      ordersOut = pendingOrders;\n      hasOrders = hasPendingOrders;\n    } else if (window.location.hash === \"#completed\") {\n      ordersOut = completedOrders;\n      hasOrders = hasCompletedOrders;\n    } else {\n      ordersOut = readyOrders;\n      hasOrders = hasReadyOrders;\n    }\n    return (\n      <div>\n        <OrderPanel\n          hasOrders={hasPendingOrders}\n          orders={pendingOrders}\n          label=\"pending\"\n          header=\"Pending Orders\"\n          sendSms={sendSms}\n          updateAirtable={updateAirtable}\n          isLoading={isLoading}\n          getOrders={getOrders}\n          new={!_.isEqual(this.response, this.old)}\n        />\n\n        <OrderPanel\n          hasOrders={hasReadyOrders}\n          orders={readyOrders}\n          label=\"ready\"\n          header=\"Ready Orders\"\n          sendSms={sendSms}\n          updateAirtable={updateAirtable}\n          isLoading={isLoading}\n          getOrders={getOrders}\n          new={!_.isEqual(this.response, this.old)}\n        />\n        <OrderPanel\n          hasOrders={hasCompletedOrders}\n          orders={completedOrders}\n          label=\"completed\"\n          header=\"Completed Orders\"\n          sendSms={sendSms}\n          updateAirtable={updateAirtable}\n          isLoading={isLoading}\n          getOrders={getOrders}\n          new={!_.isEqual(this.response, this.old)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  router: state.router,\n  orders: state.common.orders,\n  isLoading: state.common.isLoading\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SocketListener);\n"]},"metadata":{},"sourceType":"module"}