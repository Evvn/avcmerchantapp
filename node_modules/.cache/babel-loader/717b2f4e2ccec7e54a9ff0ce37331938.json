{"ast":null,"code":"// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore, persistReducer, createMigrate } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport storage from 'redux-persist/lib/storage';\nimport { createBrowserHistory } from 'history';\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './integration/sagas/rootSaga.js';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport migrations from './migrations/reduxPersistMigrations';\nexport var history = createBrowserHistory();\nexport default (function () {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [routerMiddleware(history), sagaMiddleware];\n  var enhancers = [];\n  var store = ''; // for dev\n\n  if (process.env.REACT_APP_REDUX_DEV_TOOLS === 'true') {\n    store = createStore(makeRootReducer(history), initialState, window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true\n    }).apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n  } // for prod\n  else {\n      store = createStore(makeRootReducer(history), initialState, compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n    }\n\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga);\n  window.store = store;\n  return store;\n});","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantappN/src/Store.js"],"names":["applyMiddleware","compose","createStore","persistStore","persistReducer","createMigrate","routerMiddleware","storage","createBrowserHistory","makeRootReducer","createSagaMiddleware","rootSaga","autoMergeLevel2","migrations","history","initialState","sagaMiddleware","middleware","enhancers","store","process","env","REACT_APP_REDUX_DEV_TOOLS","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","asyncReducers","run"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,eAA5D;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,IAAMC,OAAO,GAAGN,oBAAoB,EAApC;AAEP,gBAAe,YAAuB;AAAA,MAAtBO,YAAsB,uEAAP,EAAO;AAEpC,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AAEA,MAAMO,UAAU,GAAG,CACjBX,gBAAgB,CAACQ,OAAD,CADC,EAEjBE,cAFiB,CAAnB;AAIA,MAAME,SAAS,GAAG,EAAlB;AACA,MAAIC,KAAK,GAAG,EAAZ,CAToC,CAWpC;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,KAA0C,MAA9C,EAAsD;AACpDH,IAAAA,KAAK,GAAGjB,WAAW,CACjBO,eAAe,CAACK,OAAD,CADE,EAEjBC,YAFiB,EAGjBQ,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,MAAAA,KAAK,EAAE;AADmC,KAA5C,iBAEGzB,eAAe,MAAf,SAAmBiB,UAAnB,CAFH,SAEsCC,SAFtC,EAHiB,CAAnB;AAOD,GARD,CAQE;AARF,OASK;AACHC,MAAAA,KAAK,GAAGjB,WAAW,CACjBO,eAAe,CAACK,OAAD,CADE,EAEjBC,YAFiB,EAGjBd,OAAO,MAAP,UAAQD,eAAe,MAAf,SAAmBiB,UAAnB,CAAR,SAA2CC,SAA3C,EAHiB,CAAnB;AAKD;;AAEDC,EAAAA,KAAK,CAACO,aAAN,GAAsB,EAAtB;AACAV,EAAAA,cAAc,CAACW,GAAf,CAAmBhB,QAAnB;AAEAY,EAAAA,MAAM,CAACJ,KAAP,GAAeA,KAAf;AACA,SAAOA,KAAP;AACD,CAlCD","sourcesContent":["// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore, persistReducer, createMigrate } from 'redux-persist'\nimport { routerMiddleware } from 'connected-react-router';\nimport storage from 'redux-persist/lib/storage'\nimport { createBrowserHistory } from 'history'\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './integration/sagas/rootSaga.js'\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport migrations from './migrations/reduxPersistMigrations';\n\nexport const history = createBrowserHistory();\n\nexport default (initialState = {}) => {\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware = [\n    routerMiddleware(history),\n    sagaMiddleware,\n  ];\n  const enhancers = [];\n  let store = '';\n\n  // for dev\n  if (process.env.REACT_APP_REDUX_DEV_TOOLS === 'true') {\n    store = createStore(\n      makeRootReducer(history),\n      initialState,\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true,\n      })(applyMiddleware(...middleware), ...enhancers),\n    );\n  } // for prod\n  else {\n    store = createStore(\n      makeRootReducer(history),\n      initialState,\n      compose(applyMiddleware(...middleware), ...enhancers),\n    );\n  }\n\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga)\n\n  window.store = store;\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}