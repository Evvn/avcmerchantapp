{"ast":null,"code":"// import { getToken } from '../Auth';\n// provides an easy way for saga to call airtable\nvar callAirtable = function callAirtable(suffix, type, body) {\n  var returnJson = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var payload = {};\n  payload.method = type;\n  payload.headers = {\n    'Content-Type': 'application/json',\n    Authorization: \"Bearer \".concat(process.env.REACT_APP_AIRTABLE_API_KEY)\n  };\n\n  if (body) {\n    payload.body = JSON.stringify(body);\n  }\n\n  return fetch(\"https://api.airtable.com/v0/app4XnP7NuSCWMWD7/Orders/\".concat(suffix), payload).then(function (response) {\n    if (response.ok) {\n      if (returnJson) {\n        return response.json();\n      }\n\n      return response;\n    }\n\n    console.log(response.json().then(function (error) {\n      return console.log(error);\n    }));\n    throw Error(\"Api request failed with status code: \".concat(response.status));\n  });\n};\n\nexport default callAirtable;","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantappN/src/integration/callAirtable.js"],"names":["callAirtable","suffix","type","body","returnJson","payload","method","headers","Authorization","process","env","REACT_APP_AIRTABLE_API_KEY","JSON","stringify","fetch","then","response","ok","json","console","log","error","Error","status"],"mappings":"AAAA;AAEA;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf,EAA2C;AAAA,MAAtBC,UAAsB,uEAAT,IAAS;AAC/D,MAAMC,OAAO,GAAG,EAAhB;AACAA,EAAAA,OAAO,CAACC,MAAR,GAAiBJ,IAAjB;AACAG,EAAAA,OAAO,CAACE,OAAR,GAAkB;AAChB,oBAAgB,kBADA;AAEhBC,IAAAA,aAAa,mBAAYC,OAAO,CAACC,GAAR,CAAYC,0BAAxB;AAFG,GAAlB;;AAKA,MAAIR,IAAJ,EAAU;AACRE,IAAAA,OAAO,CAACF,IAAR,GAAeS,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAf;AACD;;AAED,SAAOW,KAAK,gEAAyDb,MAAzD,GAAmEI,OAAnE,CAAL,CAAiFU,IAAjF,CAAsF,UAACC,QAAD,EAAc;AACzG,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,UAAIb,UAAJ,EAAgB;AACd,eAAOY,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOF,QAAP;AACD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAM,KAAK;AAAA,aAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,KAA1B,CAAZ;AACA,UAAMC,KAAK,gDAAyCN,QAAQ,CAACO,MAAlD,EAAX;AACD,GATM,CAAP;AAUA,CAtBD;;AAwBA,eAAevB,YAAf","sourcesContent":["// import { getToken } from '../Auth';\n\n// provides an easy way for saga to call airtable\nconst callAirtable = (suffix, type, body, returnJson = true) => {\n const payload = {};\n payload.method = type;\n payload.headers = {\n   'Content-Type': 'application/json',\n   Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_API_KEY}`\n };\n\n if (body) {\n   payload.body = JSON.stringify(body);\n }\n\n return fetch(`https://api.airtable.com/v0/app4XnP7NuSCWMWD7/Orders/${suffix}`, payload).then((response) => {\n   if (response.ok) {\n     if (returnJson) {\n       return response.json();\n     }\n     return response;\n   }\n   console.log(response.json().then(error => console.log(error)))\n   throw Error(`Api request failed with status code: ${response.status}`);\n });\n};\n\nexport default callAirtable;\n"]},"metadata":{},"sourceType":"module"}