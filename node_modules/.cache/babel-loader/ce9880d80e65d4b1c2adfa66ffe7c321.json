{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/avcmerchantappN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/avcmerchantappN/src/App.js\";\nimport * as actions from './components/Common/actions/actions.js';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route, Switch } from 'react-router'; // react-router v4\n\nimport React from 'react';\nimport Landing from './components/Landing/Landing.js';\nimport MenuContainer from './components/Menu/MenuContainer.js';\nimport CartContainer from './components/Cart/CartContainer.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen.js';\nimport './App.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Airtable from \"./data/airtable\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Airtable.fetchBase({\n                  venueName: venueName,\n                  baseName: \"Orders\"\n                }).then(function (response) {\n                  Orders.setAll({\n                    venueName: venueName,\n                    items: response\n                  });\n                  var currentOrders = Orders.getAll(\"Hopscotch\");\n\n                  _this.setState({\n                    orders: currentOrders\n                  });\n                });\n\n              case 2:\n                _context.next = 4;\n                return Airtable.fetchBase({\n                  venueName: venueName,\n                  baseName: \"Database\"\n                }).then(function (response) {\n                  Items.setAll({\n                    items: response.map(Airtable.mapItemColumns),\n                    venueName: venueName\n                  });\n                  var currentItems = Items.getAll(\"Hopscotch\");\n\n                  _this.setState({\n                    items: currentItems\n                  });\n                });\n\n              case 4:\n                _context.next = 6;\n                return Airtable.fetchBase({\n                  venueName: venueName,\n                  baseName: \"Add-On by Group\"\n                }).then(function (response) {\n                  Addons.setAll({\n                    addons: response.map(Airtable.mapAddonColumns),\n                    venueName: venueName\n                  });\n                  var currentAddons = Addons.getAll(\"Hopscotch\");\n\n                  _this.setState({\n                    addons: currentAddons\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      localStorage.clear('persist:persistedStore');\n    }\n  }, {\n    key: \"routeTo\",\n    value: function routeTo(suffix) {\n      window.location = \"/\".concat(suffix);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line\n      var _this$props = this.props,\n          router = _this$props.router,\n          venueNames = _this$props.venueNames,\n          isLoading = _this$props.isLoading;\n      console.log(this.state); // const path = router.location.pathname.split('/')[1];\n      // const showMenu = venueNames ? venueNames.includes(path) ? true : false : false;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router,\n    venueNames: state.persistentCommon.venueNames,\n    isLoading: state.common.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/michaelfoster/Git/avcmerchantappN/src/App.js"],"names":["actions","connect","bindActionCreators","BrowserRouter","Router","Route","Switch","React","Landing","MenuContainer","CartContainer","NotFound","LoadingScreen","ToastContainer","toast","Airtable","App","fetchBase","venueName","baseName","then","response","Orders","setAll","items","currentOrders","getAll","setState","orders","Items","map","mapItemColumns","currentItems","Addons","addons","mapAddonColumns","currentAddons","localStorage","clear","suffix","window","location","props","router","venueNames","isLoading","console","log","state","Component","mapDispatchToProps","dispatch","mapStateToProps","persistentCommon","common"],"mappings":"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","sourcesContent":["import * as actions from './components/Common/actions/actions.js';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Route, Switch } from 'react-router' // react-router v4\nimport React from 'react';\nimport Landing from './components/Landing/Landing.js';\nimport MenuContainer from './components/Menu/MenuContainer.js';\nimport CartContainer from './components/Cart/CartContainer.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen.js';\nimport './App.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Airtable from \"./data/airtable\";\n\nclass App extends React.Component {\n\n  async componentWillMount(){\n    await Airtable.fetchBase({\n      venueName,\n      baseName: \"Orders\"\n    }).then(response => {\n      Orders.setAll({\n        venueName,\n        items: response\n      });\n      const currentOrders = Orders.getAll(\"Hopscotch\");\n      this.setState({ orders: currentOrders });\n    });\n\n    /**\n     * Get all current available items to map with the order.\n     */\n    await Airtable.fetchBase({\n      venueName,\n      baseName: \"Database\"\n    }).then(response => {\n      Items.setAll({\n        items: response.map(Airtable.mapItemColumns),\n        venueName\n      });\n      const currentItems = Items.getAll(\"Hopscotch\");\n      this.setState({ items: currentItems });\n    });\n\n    /**\n     * Get all current available items to map with the order.\n     */\n    await Airtable.fetchBase({\n      venueName,\n      baseName: \"Add-On by Group\"\n    }).then(response => {\n      Addons.setAll({\n        addons: response.map(Airtable.mapAddonColumns),\n        venueName\n      });\n      const currentAddons = Addons.getAll(\"Hopscotch\");\n      this.setState({ addons: currentAddons });\n    });\n  }\n\n  componentWillUnmount(){\n    localStorage.clear('persist:persistedStore')\n  }\n\n  routeTo(suffix){\n    window.location = `/${suffix}`;\n  }\n\n  render() {\n    // eslint-disable-next-line\n    const { router, venueNames, isLoading } = this.props\n    console.log(this.state);\n    // const path = router.location.pathname.split('/')[1];\n    // const showMenu = venueNames ? venueNames.includes(path) ? true : false : false;\n    return (\n      <div></div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  router: state.router,\n  venueNames: state.persistentCommon.venueNames,\n  isLoading: state.common.isLoading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}